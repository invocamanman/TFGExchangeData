{"ast":null,"code":"import _classCallCheck from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jesus/Escritorio/tfg SC/react/src/Exchanges.js\";\nimport React, { Component } from 'react';\n\nvar Exchanges =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Exchanges, _Component);\n\n  function Exchanges(props) {\n    var _this;\n\n    _classCallCheck(this, Exchanges);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Exchanges).call(this, props));\n    _this.state = {\n      //tasks: [] onmount creo\n      textboxvalue: '',\n      unselected: true,\n      address: ''\n    };\n    _this.handleChangemessage = _this.handleChangemessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.indexFile = React.createRef();\n    _this.Postindex = _this.Postindex.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Exchanges, [{\n    key: \"handleChangemessage\",\n    value: function handleChangemessage(event) {\n      this.setState({\n        textboxvalue: event.target.value\n      });\n    }\n  }, {\n    key: \"Postindex\",\n    value: function Postindex(event) {\n      event.preventDefault();\n      console.log(this.indexFile.current.files[0]);\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        // The file's text will be printed here\n        fetch(\"http://localhost:9000/testAPI/index\", {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            index: event.target.result\n          }) //, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n\n        }).then(function (response) {\n          console.log(\"reultadoo \", response);\n        });\n      };\n\n      reader.readAsText(this.indexFile.current.files[0]);\n    }\n  }, {\n    key: \"loadExchanges\",\n    value: function loadExchanges() {\n      var _this2 = this;\n\n      //provider or consumercheck, display buttons en funcion de la estage con u switch\n      console.log(\"stage exchange\", this.props.stage);\n\n      switch (this.props.stage) {\n        //juntar case 0 i 1, caso 0 ( wait for MR des del server), case 1 (juntar case 0 i 1), case 2: wait for seed, case 3 : finish or trubleshooting\n        case 0:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(\"form\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            id: \"newTask\",\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.textboxvalue,\n            onChange: this.handleChangemessage,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.props.Startcomunication(_this2.state.textboxvalue);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, \"Startcomunication\")), React.createElement(\"form\", {\n            onSubmit: this.Postindex,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, \"Upload file of index format: ej: 1,2,3,1,2,3\", React.createElement(\"input\", {\n            type: \"file\",\n            ref: this.indexFile,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          })), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, \"Submit\")));\n          break;\n\n        case 1:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.props.confirm();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \"confirm\"));\n          break;\n\n        case 2:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.props.seedReveal();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, \"seedRevea\"));\n          break;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.props.addrescontract != '' ? this.loadExchanges() : this.props.addrescontract);\n    }\n  }]);\n\n  return Exchanges;\n}(Component);\n\nexport default Exchanges;","map":{"version":3,"sources":["/home/jesus/Escritorio/tfg SC/react/src/Exchanges.js"],"names":["React","Component","Exchanges","props","state","textboxvalue","unselected","address","handleChangemessage","bind","indexFile","createRef","Postindex","event","setState","target","value","preventDefault","console","log","current","files","reader","FileReader","onload","fetch","method","headers","body","JSON","stringify","index","result","then","response","readAsText","stage","addrescontract","Startcomunication","confirm","seedReveal","loadExchanges"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAGMC,S;;;;;AAGL,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACb,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZ;AACCC,MAAAA,YAAY,EAAE,EAFH;AAGXC,MAAAA,UAAU,EAAE,IAHD;AAIXC,MAAAA,OAAO,EAAC;AAJG,KAAb;AAME,UAAKC,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBC,IAAzB,uDAA3B;AACA,UAAKC,SAAL,GAAiBV,KAAK,CAACW,SAAN,EAAjB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeH,IAAf,uDAAjB;AAVW;AAWjB;;;;wCACmBI,K,EAAO;AACzB,WAAKC,QAAL,CAAc;AAACT,QAAAA,YAAY,EAAEQ,KAAK,CAACE,MAAN,CAAaC;AAA5B,OAAd;AACD;;;8BAESH,K,EAAO;AACfA,MAAAA,KAAK,CAACI,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,SAAL,CAAeU,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAAZ;AACA,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,UAASX,KAAT,EAAgB;AAC9B;AACAY,QAAAA,KAAK,CAAC,qCAAD,EAAuC;AAC1CC,UAAAA,MAAM,EAAE,MADkC;AAE1CC,UAAAA,OAAO,EAAE;AACP,sBAAU,kBADH;AAEP,4BAAgB;AAFT,WAFiC;AAM1CC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,YAAAA,KAAK,EAAElB,KAAK,CAACE,MAAN,CAAaiB;AAArB,WAAf,CANoC,CAMQ;;AANR,SAAvC,CAAL,CAOGC,IAPH,CAOQ,UAASC,QAAT,EAAmB;AAEzBhB,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Be,QAA1B;AACD,SAVD;AAaD,OAfD;;AAiBAZ,MAAAA,MAAM,CAACa,UAAP,CAAkB,KAAKzB,SAAL,CAAeU,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAAlB;AACD;;;oCAEc;AAAA;;AACb;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKhB,KAAL,CAAWiC,KAAzC;;AACA,cAAQ,KAAKjC,KAAL,CAAWiC,KAAnB;AAGE;AACA,aAAK,CAAL;AACM,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAA8B,KAAKjC,KAAL,CAAWkC,cAAzC,CADM,EAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA4B,KAAKlC,KAAL,CAAWiC,KAAvC,CAFM,EAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACM;AAAO,YAAA,EAAE,EAAC,SAAV;AAAqB,YAAA,IAAI,EAAC,MAA1B;AAAiC,YAAA,SAAS,EAAC,cAA3C;AACA,YAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWC,YADlB;AACgC,YAAA,QAAQ,EAAE,KAAMG,mBADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,EAGM;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACL,KAAL,CAAWmC,iBAAX,CAA6B,MAAI,CAAClC,KAAL,CAAWC,YAAxC,CAAN;AAAA,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHN,CAHM,EAUN;AAAM,YAAA,QAAQ,EAAE,KAAKO,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,GAAG,EAAE,KAAKF,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAMI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,CAVM,CAAR;AAmBA;;AACN,aAAK,CAAL;AACK,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAA8B,KAAKP,KAAL,CAAWkC,cAAzC,CADA,EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA4B,KAAKlC,KAAL,CAAWiC,KAAvC,CAFC,EAGH;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACjC,KAAL,CAAWoC,OAAX,EAAN;AAAA,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHG,CAAR;AAQP;;AACE,aAAK,CAAL;AACI,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAA8B,KAAKpC,KAAL,CAAWkC,cAAzC,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA4B,KAAKlC,KAAL,CAAWiC,KAAvC,CAFG,EAGL;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACjC,KAAL,CAAWqC,UAAX,EAAN;AAAA,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHK,CAAP;AAON;AA3CA;AA6CD;;;6BACQ;AACP,aACK;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGO,KAAKrC,KAAL,CAAWkC,cAAX,IAA2B,EAA5B,GAAgC,KAAKI,aAAL,EAAhC,GAAqD,KAAKtC,KAAL,CAAWkC,cAHtE,CADL;AAUD;;;;EAvGqBpC,S;;AA0GxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Exchanges extends Component {\n\n\n constructor(props) {\n       super(props)\n       this.state = {\n        //tasks: [] onmount creo\n         textboxvalue: '',\n         unselected: true,\n         address:''\n          }\n         this.handleChangemessage = this.handleChangemessage.bind(this);\n         this.indexFile = React.createRef();\n         this.Postindex = this.Postindex.bind(this);\n  }\n  handleChangemessage(event) {\n    this.setState({textboxvalue: event.target.value});\n  }\n\n  Postindex(event) {\n    event.preventDefault();\n    console.log(this.indexFile.current.files[0])\n    var reader = new FileReader();\n    reader.onload = function(event) {\n      // The file's text will be printed here\n      fetch(\"http://localhost:9000/testAPI/index\",{\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({index: event.target.result})//, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n      }).then(function(response) {\n    \n        console.log(\"reultadoo \", response)\n      })\n\n      \n    };\n  \n    reader.readAsText(this.indexFile.current.files[0]);\n  }\n\n  loadExchanges(){\n    //provider or consumercheck, display buttons en funcion de la estage con u switch\n    console.log(\"stage exchange\", this.props.stage)\n    switch (this.props.stage)\n    {\n\n      //juntar case 0 i 1, caso 0 ( wait for MR des del server), case 1 (juntar case 0 i 1), case 2: wait for seed, case 3 : finish or trubleshooting\n      case 0:\n            return  <div>\n              <p>current address selected: {this.props.addrescontract}</p>\n              <p>current stage selected: {this.props.stage}</p>\n              <form>\n                    <input id=\"newTask\"  type=\"text\" className=\"form-control\" \n                    value={this.state.textboxvalue} onChange={this. handleChangemessage}/>\n                    <button type=\"button\" onClick={() => this.props.Startcomunication(this.state.textboxvalue)}>\n                      Startcomunication\n                      </button>\n              </form>\n              <form onSubmit={this.Postindex}>\n                  <label>\n                    Upload file of index format: ej: 1,2,3,1,2,3\n                    <input type=\"file\" ref={this.indexFile} />\n                  </label>\n                  <br />\n                  <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n            break;\n      case 1:\n           return  <div>\n                   <p>current address selected: {this.props.addrescontract}</p>\n                  <p>current stage selected: {this.props.stage}</p>\n                <button type=\"button\" onClick={() => this.props.confirm()}>\n              confirm\n              </button>\n\n            </div>\n    break;\n      case 2:\n          return <div>\n              <p>current address selected: {this.props.addrescontract}</p>\n              <p>current stage selected: {this.props.stage}</p>\n            <button type=\"button\" onClick={() => this.props.seedReveal()}>\n            seedRevea\n            </button>\n          </div>\n    break;\n    }\n  }textboxvalue\n  render() {\n    return (\n         <div id=\"content\">\n   \n\n              {(this.props.addrescontract!='')?this.loadExchanges():this.props.addrescontract}\n\n\n                </div>\n    \n      );\n  }\n}\n\nexport default Exchanges;\n"]},"metadata":{},"sourceType":"module"}