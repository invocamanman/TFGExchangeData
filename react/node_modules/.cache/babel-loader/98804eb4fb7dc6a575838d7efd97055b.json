{"ast":null,"code":"import _regeneratorRuntime from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jesus/Escritorio/tfg SC/react/src/apprueba.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport { FACTORY_ADDRESS, FACTORY_ABI, TFG_ABI } from './config'; //var BigNumber = require('big-number');\n\nimport ExchangesC from './Exchanges';\n\nvar Apprueba =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Apprueba, _Component);\n\n  function Apprueba(props) {\n    var _this;\n\n    _classCallCheck(this, Apprueba);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Apprueba).call(this, props));\n    _this.state = {\n      account: '',\n      valuenewexchange: 0,\n      DataProviders: [],\n      exchangedata: '',\n      textboxaddress: '',\n      addrescontract: '',\n      exchangesCounter: 0,\n      loading: true\n    };\n    _this.Createnewexchange = _this.Createnewexchange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeexchange = _this.handleChangeexchange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.SetMR = _this.SetMR.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.confirm = _this.confirm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.seedReveal = _this.seedReveal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeaddress = _this.handleChangeaddress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.Submitaddress = _this.Submitaddress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Apprueba, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData();\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var OPTIONS, web3, accounts, factory, exchangesCounter;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                OPTIONS = {\n                  //web3 + metamask\n                  defaultBlock: \"latest\",\n                  transactionConfirmationBlocks: 1,\n                  transactionBlockTimeout: 5\n                };\n                web3 = new Web3(Web3.givenProvider, null, OPTIONS); //podria ser el de infura : \"https://mainnet.infura.io/v3/7f5338a0ad3f4479927a4578bfaf0b35\"\n                // pero entonces no coge las accountsdel metamask\n\n                this.setState({\n                  web3: web3\n                });\n\n                if (window.ethereum) {\n                  window.ethereum.enable();\n                }\n\n                _context.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                factory = new web3.eth.Contract(FACTORY_ABI, FACTORY_ADDRESS);\n                this.setState({\n                  factory: factory\n                }); //let TFG= new web3.eth.Contract ( TFG_ABI, '0xA6b9FA6336Bbe5280E9492aa1Da318a33ecB3Bd3')\n\n                _context.next = 12;\n                return factory.methods.exchangesCounter().call();\n\n              case 12:\n                exchangesCounter = _context.sent;\n                this.setState({\n                  exchangesCounter: exchangesCounter\n                }); // this.setState({exchangedatas: []});\n                // for (var i = 1; i <= exchangesCounter; i++) {\n                //   const exchange = await factory.methods.exchangedatas(i).call()\n                //   console.log(\"exchange: \",i, exchange)\n                //   this.setState({\n                //     exchangedatas: [...this.state.exchangedatas, exchange]\n                //   })\n                // }\n\n                console.log(this.state.account);\n                this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"showLoading\",\n    value: function showLoading() {\n      return React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n  }, {\n    key: \"handleChangeexchange\",\n    value: function handleChangeexchange(event) {\n      this.setState({\n        valuenewexchange: event.target.value\n      });\n    }\n  }, {\n    key: \"loadExchanges\",\n    value: function loadExchanges() {\n      return React.createElement(ExchangesC, {\n        addrescontract: this.state.addrescontract,\n        SetMR: this.SetMR,\n        confirm: this.confirm,\n        seedReveal: this.seedReveal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"Createnewexchange\",\n    value: function () {\n      var _Createnewexchange = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // let result =await  this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({from: this.state.account});\n                //   console.log(\"result\", result)\n                this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({\n                  from: this.state.account\n                }) //asi continua el codigo en caso de BC real ^^\n                .on('transactionHash', function (txHash) {\n                  console.log('on transactionHash', txHash);\n                }).on('receipt', function (receipt) {\n                  console.log('on receipt', receipt);\n                  console.log(receipt.events);\n                  console.log(receipt.events.SCcreated.returnValues.exchangedata); //??????\n                  // this.setState({addrescontract:receipt.events.SCcreated.returnValues.exchangedata})\n\n                  _this2.addresscheck(receipt.events.SCcreated.returnValues.exchangedata);\n                }).on('confirmation', function (confirmationNumber, receipt) {\n                  console.log('on confirmation', confirmationNumber);\n                }).on('error', function (error) {\n                  console.log('on error', error);\n                });\n                this.state.factory.once('allEvents', {}, function (error, event) {\n                  console.log(\"event\", event);\n                }); // this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({from: this.state.account}, (error, transactionHash) => {\n                //   if (error)\n                //     console.log(error)\n                //   else{\n                //     console.log(\"hashtransaction\", transactionHash);    \n                //   }\n                //   });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function Createnewexchange() {\n        return _Createnewexchange.apply(this, arguments);\n      }\n\n      return Createnewexchange;\n    }()\n  }, {\n    key: \"SetMR\",\n    value: function () {\n      var _SetMR = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var TFG;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                TFG = new this.state.web3.eth.Contract(TFG_ABI, this.state.addrescontract);\n                TFG.methods.SetMR(100, 1000).send({\n                  from: this.state.account\n                }).on('transactionHash', function (txHash) {\n                  console.log('on transactionHash', txHash);\n                }).on('receipt', function (receipt) {\n                  console.log('on receipt', receipt);\n                }).on('confirmation', function (confirmationNumber, receipt) {\n                  console.log('on confirmation', confirmationNumber);\n                }).on('error', function (error) {\n                  console.log('on error', error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function SetMR() {\n        return _SetMR.apply(this, arguments);\n      }\n\n      return SetMR;\n    }()\n  }, {\n    key: \"confirm\",\n    value: function () {\n      var _confirm = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var TFG;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                TFG = new this.state.web3.eth.Contract(TFG_ABI, this.state.addrescontract);\n                TFG.methods.confirm().send({\n                  from: this.state.account\n                }, function (error, transactionHash) {\n                  if (error) console.log(error);else {\n                    console.log(\"hashtransaction\", transactionHash);\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function confirm() {\n        return _confirm.apply(this, arguments);\n      }\n\n      return confirm;\n    }()\n  }, {\n    key: \"seedReveal\",\n    value: function () {\n      var _seedReveal = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var TFG;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                TFG = new this.state.web3.eth.Contract(TFG_ABI, this.state.addrescontract);\n                TFG.methods.releaseSeed(10000).send({\n                  from: this.state.account\n                }, function (error, transactionHash) {\n                  if (error) console.log(error);else {\n                    console.log(\"hashtransaction\", transactionHash);\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function seedReveal() {\n        return _seedReveal.apply(this, arguments);\n      }\n\n      return seedReveal;\n    }()\n  }, {\n    key: \"handleChangeaddress\",\n    value: function handleChangeaddress(event) {\n      this.setState({\n        textboxaddress: event.target.value\n      });\n    }\n  }, {\n    key: \"Submitaddress\",\n    value: function () {\n      var _Submitaddress = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(event) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                event.preventDefault();\n                this.addresscheck(this.state.textboxaddress);\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function Submitaddress(_x) {\n        return _Submitaddress.apply(this, arguments);\n      }\n\n      return Submitaddress;\n    }()\n  }, {\n    key: \"addresscheck\",\n    value: function () {\n      var _addresscheck = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(_address) {\n        var exchangesCounter, found, i, exchange, TFG, stage;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.state.factory.methods.exchangesCounter().call();\n\n              case 2:\n                exchangesCounter = _context7.sent;\n                this.setState({\n                  exchangesCounter: exchangesCounter\n                });\n                found = false;\n                i = 1;\n\n              case 6:\n                if (!(i <= this.state.exchangesCounter)) {\n                  _context7.next = 24;\n                  break;\n                }\n\n                _context7.next = 9;\n                return this.state.factory.methods.exchangedatas(i).call();\n\n              case 9:\n                exchange = _context7.sent;\n\n                if (!(exchange == _address)) {\n                  _context7.next = 21;\n                  break;\n                }\n\n                found = true;\n                this.setState({\n                  addrescontract: _address\n                });\n                TFG = new this.state.web3.eth.Contract(TFG_ABI, _address);\n                this.setState({\n                  TFG: TFG\n                });\n                _context7.next = 17;\n                return this.state.TFG.methods.stage.call();\n\n              case 17:\n                stage = _context7.sent;\n                this.setState({\n                  stage: stage\n                });\n                console.log(\"address correct, may be better a pop up\");\n                return _context7.abrupt(\"break\", 24);\n\n              case 21:\n                i++;\n                _context7.next = 6;\n                break;\n\n              case 24:\n                if (!found) console.log(\"address is not a SC D:\");\n                console.log(\"currentaddresscontract\", this.state.addrescontract);\n\n              case 26:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function addresscheck(_x2) {\n        return _addresscheck.apply(this, arguments);\n      }\n\n      return addresscheck;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"mewexchange\",\n        type: \"number\",\n        step: \"1\",\n        className: \"form-control\",\n        value: this.state.valuenewexchange,\n        onChange: this.handleChangeexchange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.Createnewexchange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Createnewexchange\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"newTask\",\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.textboxvalue,\n        onChange: this.handleChangeaddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.Submitaddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"submitaddress\")), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, this.state.loading ? this.showLoading() : this.loadExchanges()))));\n    }\n  }]);\n\n  return Apprueba;\n}(Component);\n\nexport default Apprueba;","map":{"version":3,"sources":["/home/jesus/Escritorio/tfg SC/react/src/apprueba.js"],"names":["React","Component","Web3","FACTORY_ADDRESS","FACTORY_ABI","TFG_ABI","ExchangesC","Apprueba","props","state","account","valuenewexchange","DataProviders","exchangedata","textboxaddress","addrescontract","exchangesCounter","loading","Createnewexchange","bind","handleChangeexchange","SetMR","confirm","seedReveal","handleChangeaddress","Submitaddress","loadBlockchainData","OPTIONS","defaultBlock","transactionConfirmationBlocks","transactionBlockTimeout","web3","givenProvider","setState","window","ethereum","enable","eth","getAccounts","accounts","factory","Contract","methods","call","console","log","event","target","value","createChildContract","send","from","on","txHash","receipt","events","SCcreated","returnValues","addresscheck","confirmationNumber","error","once","TFG","transactionHash","releaseSeed","preventDefault","_address","found","i","exchangedatas","exchange","stage","textboxvalue","showLoading","loadExchanges"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AACA,SAAOC,eAAP,EAAwBC,WAAxB,EAAqCC,OAArC,QAAmD,UAAnD,C,CACA;;AACA,OAAOC,UAAP,MAAuB,aAAvB;;IAEMC,Q;;;;;AAEJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,gBAAgB,EAAC,CAFN;AAGXC,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,YAAY,EAAE,EAJH;AAKXC,MAAAA,cAAc,EAAC,EALJ;AAMXC,MAAAA,cAAc,EAAE,EANL;AAOXC,MAAAA,gBAAgB,EAAE,CAPP;AAQXC,MAAAA,OAAO,EAAE;AARE,KAAb;AAUA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AACA,UAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BD,IAA1B,uDAA5B;AACA,UAAKE,KAAL,GAAa,MAAKA,KAAL,CAAWF,IAAX,uDAAb;AACA,UAAKG,OAAL,GAAe,MAAKA,OAAL,CAAaH,IAAb,uDAAf;AACA,UAAKI,UAAL,GAAkB,MAAKA,UAAL,CAAgBJ,IAAhB,uDAAlB;AACA,UAAKK,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBL,IAAzB,uDAA3B;AACA,UAAKM,aAAL,GAAqB,MAAKA,aAAL,CAAmBN,IAAnB,uDAArB;AAlBiB;AAmBlB;;;;yCAEmB;AAClB,WAAKO,kBAAL;AACD;;;;;;;;;;;;AAGOC,gBAAAA,O,GAAU;AAAC;AACfC,kBAAAA,YAAY,EAAE,QADA;AAEdC,kBAAAA,6BAA6B,EAAE,CAFjB;AAGdC,kBAAAA,uBAAuB,EAAE;AAHX,iB;AAKVC,gBAAAA,I,GAAM,IAAI7B,IAAJ,CAASA,IAAI,CAAC8B,aAAd,EAA4B,IAA5B,EAAiCL,OAAjC,C,EAAyC;AACtD;;AACA,qBAAKM,QAAL,CAAc;AAACF,kBAAAA,IAAI,EAAJA;AAAD,iBAAd;;AACA,oBAAIG,MAAM,CAACC,QAAX,EAAqB;AAChBD,kBAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;;uBAEsBL,IAAI,CAACM,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACN,qBAAKN,QAAL,CAAc;AAACvB,kBAAAA,OAAO,EAAE6B,QAAQ,CAAC,CAAD;AAAlB,iBAAd;AAGMC,gBAAAA,O,GAAS,IAAIT,IAAI,CAACM,GAAL,CAASI,QAAb,CAAwBrC,WAAxB,EAAoCD,eAApC,C;AACf,qBAAK8B,QAAL,CAAc;AAACO,kBAAAA,OAAO,EAAPA;AAAD,iBAAd,E,CAIA;;;uBAG+BA,OAAO,CAACE,OAAR,CAAgB1B,gBAAhB,GAAmC2B,IAAnC,E;;;AAAzB3B,gBAAAA,gB;AAEN,qBAAKiB,QAAL,CAAc;AAACjB,kBAAAA,gBAAgB,EAAhBA;AAAD,iBAAd,E,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA4B,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpC,KAAL,CAAWC,OAAvB;AAGD,qBAAKuB,QAAL,CAAc;AAAChB,kBAAAA,OAAO,EAAE;AAAV,iBAAd;;;;;;;;;;;;;;;;;;kCAMY;AACX,aAAQ;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADQ,CAAR;AAID;;;yCAGoB6B,K,EAAO;AAC1B,WAAKb,QAAL,CAAc;AAACtB,QAAAA,gBAAgB,EAAEmC,KAAK,CAACC,MAAN,CAAaC;AAAhC,OAAd;AACD;;;oCAEc;AACb,aAAQ,oBAAC,UAAD;AAAY,QAAA,cAAc,EAAE,KAAKvC,KAAL,CAAWM,cAAvC;AACP,QAAA,KAAK,EAAG,KAAKM,KADN;AACa,QAAA,OAAO,EAAG,KAAKC,OAD5B;AACqC,QAAA,UAAU,EAAG,KAAKC,UADvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAED;;;;;;;;;;;;;AAQC;AACA;AAGA,qBAAKd,KAAL,CAAW+B,OAAX,CAAmBE,OAAnB,CAA2BO,mBAA3B,CAA+C,KAAKxC,KAAL,CAAWE,gBAA1D,EAA4EuC,IAA5E,CAAiF;AAACC,kBAAAA,IAAI,EAAE,KAAK1C,KAAL,CAAWC;AAAlB,iBAAjF,EAA4G;AAA5G,iBACC0C,EADD,CACI,iBADJ,EACuB,UAAAC,MAAM,EAAI;AAC/BT,kBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCQ,MAAlC;AACH,iBAHC,EAIDD,EAJC,CAIE,SAJF,EAIa,UAAAE,OAAO,EAAG;AAEvBV,kBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BS,OAA1B;AACAV,kBAAAA,OAAO,CAACC,GAAR,CAAYS,OAAO,CAACC,MAApB;AACAX,kBAAAA,OAAO,CAACC,GAAR,CAAYS,OAAO,CAACC,MAAR,CAAeC,SAAf,CAAyBC,YAAzB,CAAsC5C,YAAlD,EAJuB,CAIwC;AAChE;;AACC,kBAAA,MAAI,CAAC6C,YAAL,CAAkBJ,OAAO,CAACC,MAAR,CAAeC,SAAf,CAAyBC,YAAzB,CAAsC5C,YAAxD;AACH,iBAXG,EAYDuC,EAZC,CAYE,cAZF,EAYkB,UAACO,kBAAD,EAAqBL,OAArB,EAAiC;AACjDV,kBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bc,kBAA/B;AACH,iBAdC,EAeDP,EAfC,CAeE,OAfF,EAeW,UAAAQ,KAAK,EAAG;AACnBhB,kBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBe,KAAxB;AACH,iBAjBG;AAmBJ,qBAAKnD,KAAL,CAAW+B,OAAX,CAAmBqB,IAAnB,CAAwB,WAAxB,EAAqC,EAArC,EAEG,UAASD,KAAT,EAAgBd,KAAhB,EAAsB;AAAEF,kBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AAA8B,iBAFzD,E,CAKK;AACD;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKIgB,gBAAAA,G,GAAK,IAAI,KAAKrD,KAAL,CAAWsB,IAAX,CAAgBM,GAAhB,CAAoBI,QAAxB,CAAmCpC,OAAnC,EAA4C,KAAKI,KAAL,CAAWM,cAAvD,C;AACT+C,gBAAAA,GAAG,CAACpB,OAAJ,CAAYrB,KAAZ,CAAkB,GAAlB,EAAsB,IAAtB,EAA4B6B,IAA5B,CAAiC;AAACC,kBAAAA,IAAI,EAAE,KAAK1C,KAAL,CAAWC;AAAlB,iBAAjC,EAA6D0C,EAA7D,CAAgE,iBAAhE,EAAmF,UAAAC,MAAM,EAAI;AAC3FT,kBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCQ,MAAlC;AACH,iBAFC,EAGDD,EAHC,CAGE,SAHF,EAGa,UAAAE,OAAO,EAAG;AAEvBV,kBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BS,OAA1B;AAEH,iBAPG,EAQDF,EARC,CAQE,cARF,EAQkB,UAACO,kBAAD,EAAqBL,OAArB,EAAiC;AACjDV,kBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bc,kBAA/B;AACH,iBAVC,EAWDP,EAXC,CAWE,OAXF,EAWW,UAAAQ,KAAK,EAAG;AACnBhB,kBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBe,KAAxB;AACH,iBAbG;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBIE,gBAAAA,G,GAAK,IAAI,KAAKrD,KAAL,CAAWsB,IAAX,CAAgBM,GAAhB,CAAoBI,QAAxB,CAAmCpC,OAAnC,EAA4C,KAAKI,KAAL,CAAWM,cAAvD,C;AACT+C,gBAAAA,GAAG,CAACpB,OAAJ,CAAYpB,OAAZ,GAAsB4B,IAAtB,CAA2B;AAACC,kBAAAA,IAAI,EAAE,KAAK1C,KAAL,CAAWC;AAAlB,iBAA3B,EAAuD,UAACkD,KAAD,EAAQG,eAAR,EAA4B;AACjF,sBAAIH,KAAJ,EACEhB,OAAO,CAACC,GAAR,CAAYe,KAAZ,EADF,KAEI;AACFhB,oBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BkB,eAA/B;AACD;AAEA,iBAPH;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWID,gBAAAA,G,GAAK,IAAI,KAAKrD,KAAL,CAAWsB,IAAX,CAAgBM,GAAhB,CAAoBI,QAAxB,CAAmCpC,OAAnC,EAA4C,KAAKI,KAAL,CAAWM,cAAvD,C;AACT+C,gBAAAA,GAAG,CAACpB,OAAJ,CAAYsB,WAAZ,CAAwB,KAAxB,EAA+Bd,IAA/B,CAAoC;AAACC,kBAAAA,IAAI,EAAE,KAAK1C,KAAL,CAAWC;AAAlB,iBAApC,EAAgE,UAACkD,KAAD,EAAQG,eAAR,EAA4B;AAC1F,sBAAIH,KAAJ,EACEhB,OAAO,CAACC,GAAR,CAAYe,KAAZ,EADF,KAEI;AACFhB,oBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BkB,eAA/B;AACD;AAEA,iBAPH;;;;;;;;;;;;;;;;;;wCASkBjB,K,EAAO;AACzB,WAAKb,QAAL,CAAc;AAACnB,QAAAA,cAAc,EAAEgC,KAAK,CAACC,MAAN,CAAaC;AAA9B,OAAd;AACD;;;;;;iDAGmBF,K;;;;;AAClBA,gBAAAA,KAAK,CAACmB,cAAN;AACA,qBAAKP,YAAL,CAAkB,KAAKjD,KAAL,CAAWK,cAA7B;;;;;;;;;;;;;;;;;;;;;iDAIiBoD,Q;;;;;;;uBAEY,KAAKzD,KAAL,CAAW+B,OAAX,CAAmBE,OAAnB,CAA2B1B,gBAA3B,GAA8C2B,IAA9C,E;;;AAAzB3B,gBAAAA,gB;AACJ,qBAAKiB,QAAL,CAAc;AAACjB,kBAAAA,gBAAgB,EAAhBA;AAAD,iBAAd;AACImD,gBAAAA,K,GAAQ,K;AACHC,gBAAAA,C,GAAI,C;;;sBAAGA,CAAC,IAAI,KAAK3D,KAAL,CAAWO,gB;;;;;;uBACT,KAAKP,KAAL,CAAW+B,OAAX,CAAmBE,OAAnB,CAA2B2B,aAA3B,CAAyCD,CAAzC,EAA4CzB,IAA5C,E;;;AAAjB2B,gBAAAA,Q;;sBACAA,QAAQ,IAAIJ,Q;;;;;AAEdC,gBAAAA,KAAK,GAAG,IAAR;AACA,qBAAKlC,QAAL,CAAc;AAAClB,kBAAAA,cAAc,EAAEmD;AAAjB,iBAAd;AACIJ,gBAAAA,G,GAAK,IAAI,KAAKrD,KAAL,CAAWsB,IAAX,CAAgBM,GAAhB,CAAoBI,QAAxB,CAAmCpC,OAAnC,EAA4C6D,QAA5C,C;AACT,qBAAKjC,QAAL,CAAc;AAAC6B,kBAAAA,GAAG,EAACA;AAAL,iBAAd;;uBACmB,KAAKrD,KAAL,CAAWqD,GAAX,CAAepB,OAAf,CAAuB6B,KAAvB,CAA6B5B,IAA7B,E;;;AAAf4B,gBAAAA,K;AACJ,qBAAKtC,QAAL,CAAc;AAACsC,kBAAAA,KAAK,EAACA;AAAP,iBAAd;AACA3B,gBAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;;;;AAV8CuB,gBAAAA,CAAC,E;;;;;AAcnD,oBAAI,CAACD,KAAL,EACEvB,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAEAD,gBAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,KAAKpC,KAAL,CAAWM,cAAjD;;;;;;;;;;;;;;;;;;6BAGK;AACP,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACU;AAAO,QAAA,EAAE,EAAC,aAAV;AAAyB,QAAA,IAAI,EAAC,QAA9B;AAAuC,QAAA,IAAI,EAAC,GAA5C;AAAgD,QAAA,SAAS,EAAC,cAA1D;AACA,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,gBADlB;AACoC,QAAA,QAAQ,EAAE,KAAKS,oBADnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV,EAGU;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKF,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHV,CAHF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACU;AAAO,QAAA,EAAE,EAAC,SAAV;AAAqB,QAAA,IAAI,EAAC,MAA1B;AAAiC,QAAA,SAAS,EAAC,cAA3C;AACA,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAW+D,YADlB;AACgC,QAAA,QAAQ,EAAE,KAAKhD,mBAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV,EAGU;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHV,CAVF,EAiBU;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,SAAS,EAAC,yCAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,KAAKhB,KAAL,CAAWQ,OAAX,GAAoB,KAAKwD,WAAL,EAApB,GAAyC,KAAKC,aAAL,EAF5C,CADF,CADM,CAjBV,CADJ;AA6BD;;;;EAtPoBzE,S;;AAyPvB,eAAeM,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport{FACTORY_ADDRESS, FACTORY_ABI, TFG_ABI} from './config'\n//var BigNumber = require('big-number');\nimport ExchangesC from './Exchanges'\n\nclass Apprueba extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { \n      account: '',\n      valuenewexchange:0,\n      DataProviders: [],\n      exchangedata: '',\n      textboxaddress:'',\n      addrescontract: '',\n      exchangesCounter: 0,\n      loading: true\n       }\n    this.Createnewexchange = this.Createnewexchange.bind(this);\n    this.handleChangeexchange = this.handleChangeexchange.bind(this);\n    this.SetMR = this.SetMR.bind(this);\n    this.confirm = this.confirm.bind(this);\n    this.seedReveal = this.seedReveal.bind(this);\n    this.handleChangeaddress = this.handleChangeaddress.bind(this);\n    this.Submitaddress = this.Submitaddress.bind(this);\n  }\n  \n  componentWillMount(){\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData(){\n    const OPTIONS = {//web3 + metamask\n      defaultBlock: \"latest\",\n      transactionConfirmationBlocks: 1,\n      transactionBlockTimeout: 5\n    };\n    const web3= new Web3(Web3.givenProvider,null,OPTIONS)//podria ser el de infura : \"https://mainnet.infura.io/v3/7f5338a0ad3f4479927a4578bfaf0b35\"\n   // pero entonces no coge las accountsdel metamask\n   this.setState({web3})\n   if (window.ethereum) {\n        window.ethereum.enable()\n    }\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n\n\n    const factory= new web3.eth.Contract ( FACTORY_ABI,FACTORY_ADDRESS)\n    this.setState({factory})\n\n    \n\n    //let TFG= new web3.eth.Contract ( TFG_ABI, '0xA6b9FA6336Bbe5280E9492aa1Da318a33ecB3Bd3')\n\n\n    const exchangesCounter = await factory.methods.exchangesCounter().call()\n\n    this.setState({exchangesCounter});\n\n\n    // this.setState({exchangedatas: []});\n    // for (var i = 1; i <= exchangesCounter; i++) {\n    //   const exchange = await factory.methods.exchangedatas(i).call()\n    //   console.log(\"exchange: \",i, exchange)\n    //   this.setState({\n    //     exchangedatas: [...this.state.exchangedatas, exchange]\n    //   })\n    // }\n\n\n    console.log(this.state.account)\n\n\n   this.setState({loading: false})\n \n  }\n\n\n  \n  showLoading(){\n    return  <div id=\"loader\" className=\"text-center\">\n    <p className=\"text-center\">Loading...</p>\n  </div>\n\n  }\n\n\n  handleChangeexchange(event) {\n    this.setState({valuenewexchange: event.target.value});\n  }\n\n  loadExchanges(){\n    return  <ExchangesC addrescontract={this.state.addrescontract} \n     SetMR= {this.SetMR} confirm= {this.confirm} seedReveal= {this.seedReveal}/>\n  }\n\n  \n\n  \n  async Createnewexchange(){\n\n\n    // let result =await  this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({from: this.state.account});\n    //   console.log(\"result\", result)\n\n\n    this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({from: this.state.account})//asi continua el codigo en caso de BC real ^^\n    .on('transactionHash', txHash => {\n      console.log('on transactionHash', txHash);\n  })\n  .on('receipt', receipt=> {\n    \n    console.log('on receipt', receipt);\n    console.log(receipt.events)\n    console.log(receipt.events.SCcreated.returnValues.exchangedata)//??????\n   // this.setState({addrescontract:receipt.events.SCcreated.returnValues.exchangedata})\n    this.addresscheck(receipt.events.SCcreated.returnValues.exchangedata)\n})\n  .on('confirmation', (confirmationNumber, receipt) => {\n      console.log('on confirmation', confirmationNumber);\n  })\n  .on('error', error=> {\n    console.log('on error', error);\n})\n\nthis.state.factory.once('allEvents', {\n  \n}, function(error, event){ console.log(\"event\", event); });\n\n\n     // this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({from: this.state.account}, (error, transactionHash) => {\n    //   if (error)\n    //     console.log(error)\n    //   else{\n    //     console.log(\"hashtransaction\", transactionHash);    \n        \n    //   }\n    //   });\n  }\n\n  async SetMR(){\n\n    let TFG= new this.state.web3.eth.Contract ( TFG_ABI, this.state.addrescontract)\n    TFG.methods.SetMR(100,1000).send({from: this.state.account}).on('transactionHash', txHash => {\n      console.log('on transactionHash', txHash);\n  })\n  .on('receipt', receipt=> {\n    \n    console.log('on receipt', receipt);\n\n})\n  .on('confirmation', (confirmationNumber, receipt) => {\n      console.log('on confirmation', confirmationNumber);\n  })\n  .on('error', error=> {\n    console.log('on error', error);\n})\n\n  }\n  async confirm(){\n\n    let TFG= new this.state.web3.eth.Contract ( TFG_ABI, this.state.addrescontract)\n    TFG.methods.confirm().send({from: this.state.account}, (error, transactionHash) => {\n      if (error)\n        console.log(error)\n      else{\n        console.log(\"hashtransaction\", transactionHash);    \n      }\n\n      });\n  }\n  async seedReveal(){\n\n    let TFG= new this.state.web3.eth.Contract ( TFG_ABI, this.state.addrescontract)\n    TFG.methods.releaseSeed(10000).send({from: this.state.account}, (error, transactionHash) => {\n      if (error)\n        console.log(error)\n      else{\n        console.log(\"hashtransaction\", transactionHash);    \n      }\n\n      });\n  }\n  handleChangeaddress(event) {\n    this.setState({textboxaddress: event.target.value});\n  }\n\n\n  async Submitaddress(event) {\n    event.preventDefault();\n    this.addresscheck(this.state.textboxaddress)\n\n  }\n\n  async addresscheck(_address){\n\n    let exchangesCounter = await this.state.factory.methods.exchangesCounter().call()\n    this.setState({exchangesCounter});\n    let found = false;\n    for (var i = 1; i <= this.state.exchangesCounter; i++) {\n      let exchange = await this.state.factory.methods.exchangedatas(i).call()\n      if (exchange == _address)\n      {\n        found = true\n        this.setState({addrescontract: _address});\n        let TFG= new this.state.web3.eth.Contract ( TFG_ABI, _address)\n        this.setState({TFG:TFG})\n        let stage =  await this.state.TFG.methods.stage.call()\n        this.setState({stage:stage})\n        console.log(\"address correct, may be better a pop up\")\n        break;\n      }\n    }\n    if (!found)\n      console.log(\"address is not a SC D:\")\n    \n      console.log(\"currentaddresscontract\", this.state.addrescontract)\n  }\n\n  render() {\n    return (\n        <div>\n       \n\n          <form >\n                    <input id=\"mewexchange\"  type=\"number\" step=\"1\" className=\"form-control\" \n                    value={this.state.valuenewexchange} onChange={this.handleChangeexchange}/>\n                    <button type=\"button\" onClick={this.Createnewexchange}>\n                     Createnewexchange\n                    </button>\n          </form>\n          <form>\n                    <input id=\"newTask\"  type=\"text\" className=\"form-control\" \n                    value={this.state.textboxvalue} onChange={this.handleChangeaddress}/>\n                    <button type=\"button\" onClick={this.Submitaddress}>\n                     submitaddress\n                    </button>\n                  </form>\n                  <div className=\"container-fluid\">\n            <div className=\"row\">\n              <main role=\"main\" className=\"col-lg-12 d-flex justify-content-center\">\n\n                {this.state.loading? this.showLoading() : this.loadExchanges()}\n\n              </main>\n            </div>\n          </div> \n        </div>\n      );\n  }\n}\n\nexport default Apprueba;\n"]},"metadata":{},"sourceType":"module"}