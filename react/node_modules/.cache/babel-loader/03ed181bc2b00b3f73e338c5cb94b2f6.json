{"ast":null,"code":"import _regeneratorRuntime from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jesus/Escritorio/tfg SC/react/src/apprueba.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport { FACTORY_ADDRESS, FACTORY_ABI, EXCHANGEDATA_ABI } from './resources/config'; //var BigNumber = require('big-number');\n\nimport ExchangesC from './Exchanges';\nimport { Form, Button } from 'react-bootstrap';\nimport { MerkleTreeLibrary, zip, genIntSequence } from './resources/merkletreelib';\n\nvar FileSaver = require('file-saver');\n\nvar Apprueba =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Apprueba, _Component);\n\n  function Apprueba(props) {\n    var _this;\n\n    _classCallCheck(this, Apprueba);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Apprueba).call(this, props));\n    _this.state = {\n      account: '',\n      valuenewexchange: 0,\n      DataProviders: [],\n      exchangedata: '',\n      textboxaddress: '',\n      addrescontract: '',\n      exchangesCounter: 0,\n      loading: true\n    };\n    _this.Createnewexchange = _this.Createnewexchange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeexchange = _this.handleChangeexchange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.Startcomunication = _this.Startcomunication.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.confirm = _this.confirm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.seedReveal = _this.seedReveal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.conflict = _this.conflict.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeaddress = _this.handleChangeaddress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.Submitaddress = _this.Submitaddress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.refresh = _this.refresh.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.CreateRandomIndex = _this.CreateRandomIndex.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.comprobe = _this.comprobe.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Apprueba, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData();\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var OPTIONS, web3, accounts, factory, exchangesCounter;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                OPTIONS = {\n                  //web3 + metamask\n                  defaultBlock: \"latest\",\n                  transactionConfirmationBlocks: 1,\n                  transactionBlockTimeout: 5\n                };\n                web3 = new Web3(Web3.givenProvider, null, OPTIONS); //podria ser el de infura : \"https://mainnet.infura.io/v3/7f5338a0ad3f4479927a4578bfaf0b35\"\n                // pero entonces no coge las accountsdel metamask\n\n                this.setState({\n                  web3: web3\n                });\n\n                if (window.ethereum) {\n                  window.ethereum.enable();\n                }\n\n                _context.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                factory = new web3.eth.Contract(FACTORY_ABI, FACTORY_ADDRESS);\n                this.setState({\n                  factory: factory\n                }); //let Exchangedata= new web3.eth.Contract ( EXCHANGEDATA_ABI, '0xA6b9FA6336Bbe5280E9492aa1Da318a33ecB3Bd3')\n\n                _context.next = 12;\n                return factory.methods.exchangesCounter().call();\n\n              case 12:\n                exchangesCounter = _context.sent;\n                this.setState({\n                  exchangesCounter: exchangesCounter\n                }); // this.setState({exchangedatas: []});\n                // for (var i = 1; i <= exchangesCounter; i++) {\n                //   const exchange = await factory.methods.exchangedatas(i).call()\n                //   console.log(\"exchange: \",i, exchange)\n                //   this.setState({\n                //     exchangedatas: [...this.state.exchangedatas, exchange]\n                //   })\n                // }\n\n                console.log(this.state.account);\n                this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"showLoading\",\n    value: function showLoading() {\n      return React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n  }, {\n    key: \"handleChangeexchange\",\n    value: function handleChangeexchange(event) {\n      this.setState({\n        valuenewexchange: event.target.value\n      });\n    }\n  }, {\n    key: \"loadExchanges\",\n    value: function loadExchanges() {\n      console.log(this.state.stage, this.state.consumer, this.state.provider);\n      if (this.state.consumer) return React.createElement(ExchangesC, {\n        addrescontract: this.state.addrescontract,\n        Startcomunication: this.Startcomunication,\n        confirm: this.confirm,\n        seedReveal: this.seedReveal,\n        conflict: this.conflict,\n        stage: this.state.stage,\n        consumer: this.state.consumer,\n        provider: this.state.provider,\n        comprobe: this.comprobe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"Createnewexchange\",\n    value: function () {\n      var _Createnewexchange = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // let result =await  this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({from: this.state.account});\n                //   console.log(\"result\", result)\n                this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({\n                  from: this.state.account\n                }) //asi continua el codigo en caso de BC real ^^\n                .on('transactionHash', function (txHash) {\n                  console.log('on transactionHash', txHash);\n                }).on('receipt', function (receipt) {\n                  console.log('on receipt', receipt);\n                  console.log(receipt.events);\n                  console.log(receipt.events.SCcreated.returnValues.exchangedata); //??????\n                  // this.setState({addrescontract:receipt.events.SCcreated.returnValues.exchangedata})\n\n                  _this2.addresscheck(receipt.events.SCcreated.returnValues.exchangedata);\n                }).on('confirmation', function (confirmationNumber, receipt) {\n                  console.log('on confirmation', confirmationNumber);\n                }).on('error', function (error) {\n                  console.log('on error', error);\n                });\n                this.state.factory.once('allEvents', {}, function (error, event) {\n                  console.log(\"event\", event);\n                }); // this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({from: this.state.account}, (error, transactionHash) => {\n                //   if (error)\n                //     console.log(error)\n                //   else{\n                //     console.log(\"hashtransaction\", transactionHash);    \n                //   }\n                //   });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function Createnewexchange() {\n        return _Createnewexchange.apply(this, arguments);\n      }\n\n      return Createnewexchange;\n    }() // async Startcomunication(message){\n    //     let sign = await this.state.web3.eth.personal.sign(message, this.state.account,'')//password nose necesita, aún así se debe complementar\n    //     fetch(\"http://localhost:9000/testAPI/id\",{\n    //     method: 'POST',\n    //     headers: {\n    //       'Accept': 'application/json',\n    //       'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify({addrescontract: this.state.addrescontract, sign:sign,message:message})//, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    //   }).then(function(response) {\n    //     return response.text();//.json()\n    //   }).then(function(data) {\n    //     console.log(data)\n    //      var blob = new Blob([data], {type: \"text/plain;charset=utf-8\"});\n    //      FileSaver.saveAs(blob, \"cryptos.txt\");\n    //   });\n    // }\n\n  }, {\n    key: \"Startcomunication\",\n    value: function () {\n      var _Startcomunication = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(message) {\n        var sign;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log(this.state.addrescontract);\n                _context3.next = 3;\n                return this.state.web3.eth.personal.sign(this.state.addrescontract, this.state.account, '');\n\n              case 3:\n                sign = _context3.sent;\n                //password nose necesita, aún así se debe complementar\n                fetch(\"http://localhost:9000/testAPI/id\", {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    addrescontract: this.state.addrescontract,\n                    sign: sign\n                  }) //, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n\n                }).then(function (response) {\n                  //comprobar que sea un 200 OK\n                  return response.json(); //.json() .text()\n                }).then(function (data) {\n                  console.log(data);\n                  var blob = new Blob([JSON.stringify(data)], {\n                    type: \"text/plain;charset=utf-8\"\n                  });\n                  FileSaver.saveAs(blob, \"cryptos.txt\");\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function Startcomunication(_x) {\n        return _Startcomunication.apply(this, arguments);\n      }\n\n      return Startcomunication;\n    }()\n  }, {\n    key: \"shuffle\",\n    value: function shuffle(array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n\n        var _ref = [array[j], array[i]];\n        array[i] = _ref[0];\n        array[j] = _ref[1];\n      }\n    }\n  }, {\n    key: \"CreateRandomIndex\",\n    value: function CreateRandomIndex() {\n      var sequence = genIntSequence(50); //array 0-49\n\n      this.shuffle(sequence);\n      var indexarray = sequence.slice(0, 9);\n      indexarray.sort(function (a, b) {\n        return a - b;\n      });\n      var blob = new Blob([JSON.stringify({\n        index: indexarray\n      })], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      FileSaver.saveAs(blob, \"index.txt\");\n    }\n  }, {\n    key: \"Testdownload\",\n    value: function () {\n      var _Testdownload = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return fetch(\"http://localhost:9000/testAPI/test\", {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    a: 1\n                  }) //, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n\n                });\n\n              case 2:\n                response = _context4.sent;\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function Testdownload() {\n        return _Testdownload.apply(this, arguments);\n      }\n\n      return Testdownload;\n    }() //   async SetMR(){\n    //       this.state.Exchangedata.methods.SetMR(100,1000).send({from: this.state.account}).on('transactionHash', txHash => {\n    //       console.log('on transactionHash', txHash);\n    //   })\n    //   .on('receipt', receipt=> {\n    //     console.log('on receipt', receipt);\n    //     this.state.Exchangedata.methods.stage.call().then(function(stage){\n    //       console.log(stage)\n    //       this.setState({stage})\n    //     }.bind(this));\n    // })\n    //   .on('confirmation', (confirmationNumber, receipt) => {\n    //       console.log('on confirmation', confirmationNumber);\n    //   })\n    //   .on('error', error=> {\n    //     console.log('on error', error);\n    // })\n    //   }\n\n  }, {\n    key: \"comprobe\",\n    value: function () {\n      var _comprobe = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(cryptos, keys, proofs) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.state.Exchangedata.methods.MRC.call();\n\n              case 2:\n                MRC = _context5.sent;\n                _context5.next = 5;\n                return this.state.Exchangedata.methods.MRK.call();\n\n              case 5:\n                MRK = _context5.sent;\n                console.log({\n                  MRC: MRC,\n                  MRK: MRK\n                });\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function comprobe(_x2, _x3, _x4) {\n        return _comprobe.apply(this, arguments);\n      }\n\n      return comprobe;\n    }()\n  }, {\n    key: \"confirm\",\n    value: function () {\n      var _confirm = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.state.Exchangedata.methods.confirm().send({\n                  from: this.state.account\n                }).on('transactionHash', function (txHash) {\n                  console.log('on transactionHash', txHash);\n                }).on('receipt', function (receipt) {\n                  console.log('on receipt', receipt);\n\n                  _this3.state.Exchangedata.methods.stage.call().then(function (stage) {\n                    console.log(stage);\n                    this.setState({\n                      stage: stage\n                    });\n                  }.bind(_this3));\n                }).on('confirmation', function (confirmationNumber, receipt) {\n                  console.log('on confirmation', confirmationNumber);\n                }).on('error', function (error) {\n                  console.log('on error', error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function confirm() {\n        return _confirm.apply(this, arguments);\n      }\n\n      return confirm;\n    }()\n  }, {\n    key: \"seedReveal\",\n    value: function () {\n      var _seedReveal = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                fetch(\"http://localhost:9000/testAPI/release\", {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    address: this.state.addrescontract\n                  }) //, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n\n                }).then(function (response) {\n                  return response.text(); //.json()\n                }).then(function (data) {\n                  console.log(data);\n                  this.state.Exchangedata.methods.stage.call().then(function (stage) {\n                    console.log(stage);\n                    this.setState({\n                      stage: stage\n                    });\n                  }.bind(this));\n                }.bind(this));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function seedReveal() {\n        return _seedReveal.apply(this, arguments);\n      }\n\n      return seedReveal;\n    }()\n  }, {\n    key: \"conflict\",\n    value: function () {\n      var _conflict = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8() {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                this.state.Exchangedata.methods.conflict().send({\n                  from: this.state.account\n                }).on('transactionHash', function (txHash) {\n                  console.log('on transactionHash', txHash);\n                }).on('receipt', function (receipt) {\n                  console.log('on receipt', receipt);\n                  console.log(receipt.events.refund.returnValues.correct);\n\n                  _this4.state.Exchangedata.methods.stage.call().then(function (stage) {\n                    console.log(stage);\n                    this.setState({\n                      stage: stage\n                    });\n                  }.bind(_this4));\n                }).on('confirmation', function (confirmationNumber, receipt) {\n                  console.log('on confirmation', confirmationNumber);\n                }).on('error', function (error) {\n                  console.log('on error', error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function conflict() {\n        return _conflict.apply(this, arguments);\n      }\n\n      return conflict;\n    }() //     this.state.Exchangedata.methods.releaseSeed(10000).send({from: this.state.account}).on('transactionHash', txHash => {\n    //       console.log('on transactionHash', txHash);\n    //   })\n    //   .on('receipt', receipt=> {\n    //     console.log('on receipt', receipt);\n    //     this.state.Exchangedata.methods.stage.call().then(function(stage){\n    //       console.log(stage)\n    //       this.setState({stage})\n    //     }.bind(this));\n    // })\n    //   .on('confirmation', (confirmationNumber, receipt) => {\n    //       console.log('on confirmation', confirmationNumber);\n    //   })\n    //   .on('error', error=> {\n    //     console.log('on error', error);\n    // })\n\n  }, {\n    key: \"handleChangeaddress\",\n    value: function handleChangeaddress(event) {\n      this.setState({\n        textboxaddress: event.target.value\n      });\n    }\n  }, {\n    key: \"Submitaddress\",\n    value: function () {\n      var _Submitaddress = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(event) {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                event.preventDefault();\n                this.addresscheck(this.state.textboxaddress);\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function Submitaddress(_x5) {\n        return _Submitaddress.apply(this, arguments);\n      }\n\n      return Submitaddress;\n    }()\n  }, {\n    key: \"refresh\",\n    value: function refresh(event) {\n      event.preventDefault();\n      this.addresscheck(this.state.addrescontract);\n    }\n  }, {\n    key: \"addresscheck\",\n    value: function () {\n      var _addresscheck = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(_address) {\n        var exchangesCounter, found, i, exchange, Exchangedata, stage, provider, consumer;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.state.factory.methods.exchangesCounter().call();\n\n              case 2:\n                exchangesCounter = _context10.sent;\n                this.setState({\n                  exchangesCounter: exchangesCounter\n                });\n                found = false;\n                i = 1;\n\n              case 6:\n                if (!(i <= this.state.exchangesCounter)) {\n                  _context10.next = 31;\n                  break;\n                }\n\n                _context10.next = 9;\n                return this.state.factory.methods.exchangedatas(i).call();\n\n              case 9:\n                exchange = _context10.sent;\n\n                if (!(exchange == _address)) {\n                  _context10.next = 28;\n                  break;\n                }\n\n                found = true;\n                this.setState({\n                  addrescontract: _address\n                });\n                Exchangedata = new this.state.web3.eth.Contract(EXCHANGEDATA_ABI, _address);\n                this.setState({\n                  Exchangedata: Exchangedata\n                });\n                _context10.next = 17;\n                return this.state.Exchangedata.methods.stage.call();\n\n              case 17:\n                stage = _context10.sent;\n                _context10.next = 20;\n                return this.state.Exchangedata.methods.provider.call();\n\n              case 20:\n                provider = _context10.sent;\n                _context10.next = 23;\n                return this.state.Exchangedata.methods.consumer.call();\n\n              case 23:\n                consumer = _context10.sent;\n                console.log(\"provider\", provider);\n                this.setState({\n                  stage: stage,\n                  provider: provider,\n                  consumer: consumer\n                });\n                console.log(\"address correct, may be better a pop up\");\n                return _context10.abrupt(\"break\", 31);\n\n              case 28:\n                i++;\n                _context10.next = 6;\n                break;\n\n              case 31:\n                if (!found) console.log(\"address is not a SC D:\");\n                console.log(\"currentaddresscontract\", this.state.addrescontract);\n\n              case 33:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function addresscheck(_x6) {\n        return _addresscheck.apply(this, arguments);\n      }\n\n      return addresscheck;\n    }()\n  }, {\n    key: \"shownewexchange\",\n    value: function shownewexchange() {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"createnewcontract\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, \"Create new SC for exchange data\"), React.createElement(Form.Control, {\n        type: \"collateral\",\n        placeholder: \"collateral\",\n        value: this.state.valuenewexchange,\n        onChange: this.handleChangeexchange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: this.Createnewexchange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, \"Create SC\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.Testdownload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, \"Pruebas\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.CreateRandomIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, \"createindex\"), this.state.addrescontract == '' ? this.shownewexchange() : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, \"already have a SC address\"), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"createnewcontract\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, \"Enter your address of your SC to continue the process\"), React.createElement(Form.Control, {\n        type: \"Address\",\n        placeholder: \"Address\",\n        value: this.state.textboxvalue,\n        onChange: this.handleChangeaddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: this.Submitaddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: this.refresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, \"Refresh\"), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, this.state.loading ? this.showLoading() : this.loadExchanges()))));\n    }\n  }]);\n\n  return Apprueba;\n}(Component);\n\nexport default Apprueba;","map":{"version":3,"sources":["/home/jesus/Escritorio/tfg SC/react/src/apprueba.js"],"names":["React","Component","Web3","FACTORY_ADDRESS","FACTORY_ABI","EXCHANGEDATA_ABI","ExchangesC","Form","Button","MerkleTreeLibrary","zip","genIntSequence","FileSaver","require","Apprueba","props","state","account","valuenewexchange","DataProviders","exchangedata","textboxaddress","addrescontract","exchangesCounter","loading","Createnewexchange","bind","handleChangeexchange","Startcomunication","confirm","seedReveal","conflict","handleChangeaddress","Submitaddress","refresh","CreateRandomIndex","comprobe","loadBlockchainData","OPTIONS","defaultBlock","transactionConfirmationBlocks","transactionBlockTimeout","web3","givenProvider","setState","window","ethereum","enable","eth","getAccounts","accounts","factory","Contract","methods","call","console","log","event","target","value","stage","consumer","provider","createChildContract","send","from","on","txHash","receipt","events","SCcreated","returnValues","addresscheck","confirmationNumber","error","once","message","personal","sign","fetch","method","headers","body","JSON","stringify","then","response","json","data","blob","Blob","type","saveAs","array","i","length","j","Math","floor","random","sequence","shuffle","indexarray","slice","sort","a","b","index","cryptos","keys","proofs","Exchangedata","MRC","MRK","address","text","refund","correct","preventDefault","_address","found","exchangedatas","exchange","Testdownload","shownewexchange","textboxvalue","showLoading","loadExchanges"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport{FACTORY_ADDRESS, FACTORY_ABI, EXCHANGEDATA_ABI} from './resources/config'\n//var BigNumber = require('big-number');\nimport ExchangesC from './Exchanges'\nimport { Form,Button } from 'react-bootstrap';\nimport {MerkleTreeLibrary, zip, genIntSequence} from './resources/merkletreelib'\n\nvar FileSaver = require('file-saver');\n\n\n\n\nclass Apprueba extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { \n      account: '',\n      valuenewexchange:0,\n      DataProviders: [],\n      exchangedata: '',\n      textboxaddress:'',\n      addrescontract: '',\n      exchangesCounter: 0,\n      loading: true\n       }\n    this.Createnewexchange = this.Createnewexchange.bind(this);\n    this.handleChangeexchange = this.handleChangeexchange.bind(this);\n    this.Startcomunication = this.Startcomunication.bind(this);\n    this.confirm = this.confirm.bind(this);\n    this.seedReveal = this.seedReveal.bind(this);\n    this.conflict = this.conflict.bind(this);\n    this.handleChangeaddress = this.handleChangeaddress.bind(this);\n    this.Submitaddress = this.Submitaddress.bind(this);\n    this.refresh = this.refresh.bind(this);\n    this.CreateRandomIndex = this.CreateRandomIndex.bind(this);\n    this.comprobe = this.comprobe.bind(this);\n  }\n  \n  componentWillMount(){\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData(){\n    const OPTIONS = {//web3 + metamask\n      defaultBlock: \"latest\",\n      transactionConfirmationBlocks: 1,\n      transactionBlockTimeout: 5\n    };\n    const web3= new Web3(Web3.givenProvider,null,OPTIONS)//podria ser el de infura : \"https://mainnet.infura.io/v3/7f5338a0ad3f4479927a4578bfaf0b35\"\n   // pero entonces no coge las accountsdel metamask\n   this.setState({web3})\n   if (window.ethereum) {\n        window.ethereum.enable()\n    }\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n\n\n    const factory= new web3.eth.Contract ( FACTORY_ABI,FACTORY_ADDRESS)\n    this.setState({factory})\n\n    \n\n    //let Exchangedata= new web3.eth.Contract ( EXCHANGEDATA_ABI, '0xA6b9FA6336Bbe5280E9492aa1Da318a33ecB3Bd3')\n\n\n    const exchangesCounter = await factory.methods.exchangesCounter().call()\n\n    this.setState({exchangesCounter});\n\n\n    // this.setState({exchangedatas: []});\n    // for (var i = 1; i <= exchangesCounter; i++) {\n    //   const exchange = await factory.methods.exchangedatas(i).call()\n    //   console.log(\"exchange: \",i, exchange)\n    //   this.setState({\n    //     exchangedatas: [...this.state.exchangedatas, exchange]\n    //   })\n    // }\n\n\n    console.log(this.state.account)\n\n\n   this.setState({loading: false})\n \n  }\n\n\n  \n  showLoading(){\n    return  <div id=\"loader\" className=\"text-center\">\n    <p className=\"text-center\">Loading...</p>\n  </div>\n\n  }\n\n\n  handleChangeexchange(event) {\n    this.setState({valuenewexchange: event.target.value});\n  }\n\n  loadExchanges(){\n    console.log(this.state.stage,this.state.consumer,this.state.provider)\n    if(this.state.consumer)\n    return  <ExchangesC addrescontract={this.state.addrescontract} \n     Startcomunication= {this.Startcomunication} confirm= {this.confirm} seedReveal= {this.seedReveal} conflict= {this.conflict} stage={this.state.stage} \n     consumer={this.state.consumer} provider={this.state.provider} comprobe={this.comprobe}/>\n  }\n  async Createnewexchange(){\n\n    // let result =await  this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({from: this.state.account});\n    //   console.log(\"result\", result)\n    this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({from: this.state.account})//asi continua el codigo en caso de BC real ^^\n    .on('transactionHash', txHash => {\n      console.log('on transactionHash', txHash);\n  })\n  .on('receipt', receipt=> {\n    \n    console.log('on receipt', receipt);\n    console.log(receipt.events)\n    console.log(receipt.events.SCcreated.returnValues.exchangedata)//??????\n   // this.setState({addrescontract:receipt.events.SCcreated.returnValues.exchangedata})\n    this.addresscheck(receipt.events.SCcreated.returnValues.exchangedata)\n})\n  .on('confirmation', (confirmationNumber, receipt) => {\n      console.log('on confirmation', confirmationNumber);\n  })\n  .on('error', error=> {\n    console.log('on error', error);\n})\n\nthis.state.factory.once('allEvents', {\n  \n}, function(error, event){ console.log(\"event\", event); });\n\n\n     // this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({from: this.state.account}, (error, transactionHash) => {\n    //   if (error)\n    //     console.log(error)\n    //   else{\n    //     console.log(\"hashtransaction\", transactionHash);    \n        \n    //   }\n    //   });\n  }\n\n\n  // async Startcomunication(message){\n    \n  //     let sign = await this.state.web3.eth.personal.sign(message, this.state.account,'')//password nose necesita, aún así se debe complementar\n  //     fetch(\"http://localhost:9000/testAPI/id\",{\n  //     method: 'POST',\n  //     headers: {\n  //       'Accept': 'application/json',\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify({addrescontract: this.state.addrescontract, sign:sign,message:message})//, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n  //   }).then(function(response) {\n      \n  //     return response.text();//.json()\n  //   }).then(function(data) {\n  //     console.log(data)\n  //      var blob = new Blob([data], {type: \"text/plain;charset=utf-8\"});\n  //      FileSaver.saveAs(blob, \"cryptos.txt\");\n  //   });\n   \n  // }\n    \n  async Startcomunication(message){\n    \n    console.log(this.state.addrescontract)\n    let sign = await this.state.web3.eth.personal.sign(this.state.addrescontract, this.state.account,'')//password nose necesita, aún así se debe complementar\n    fetch(\"http://localhost:9000/testAPI/id\",{\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({addrescontract: this.state.addrescontract, sign:sign})//, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n  }).then(function(response) {//comprobar que sea un 200 OK\n    \n    return response.json();//.json() .text()\n  }).then(function(data) {\n    console.log(data)\n     var blob = new Blob([JSON.stringify(data)], {type: \"text/plain;charset=utf-8\"});\n     FileSaver.saveAs(blob, \"cryptos.txt\");\n  });\n \n}\n\nshuffle(array) {\n\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\n  CreateRandomIndex(){\n\n  let sequence = genIntSequence(50);//array 0-49\n  this.shuffle(sequence)\n\n  let indexarray = sequence.slice(0,9);\n  indexarray.sort( (a, b) => a - b );\n\n  var blob = new Blob([JSON.stringify({index: indexarray})], {type: \"text/plain;charset=utf-8\"});\n  FileSaver.saveAs(blob, \"index.txt\");\n\n}\n\n  async Testdownload(){\n    \n    let response = await fetch(\"http://localhost:9000/testAPI/test\",{\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({a:1})//, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n  });\n \n\n\n}\n//   async SetMR(){\n\n//       this.state.Exchangedata.methods.SetMR(100,1000).send({from: this.state.account}).on('transactionHash', txHash => {\n//       console.log('on transactionHash', txHash);\n//   })\n//   .on('receipt', receipt=> {\n    \n//     console.log('on receipt', receipt);\n\n//     this.state.Exchangedata.methods.stage.call().then(function(stage){\n//       console.log(stage)\n//       this.setState({stage})\n\n//     }.bind(this));\n\n// })\n//   .on('confirmation', (confirmationNumber, receipt) => {\n//       console.log('on confirmation', confirmationNumber);\n//   })\n//   .on('error', error=> {\n//     console.log('on error', error);\n// })\n\n//   }\nasync comprobe(cryptos, keys, proofs){\n\n  MRC = await this.state.Exchangedata.methods.MRC.call()\n  MRK = await this.state.Exchangedata.methods.MRK.call()\n  console.log({MRC, MRK})\n\n}\n\n  async confirm(){\n\n      this.state.Exchangedata.methods.confirm().send({from: this.state.account}).on('transactionHash', txHash => {\n        console.log('on transactionHash', txHash);\n    })\n    .on('receipt', receipt=> {\n    \n      console.log('on receipt', receipt);\n  \n      this.state.Exchangedata.methods.stage.call().then(function(stage){\n        console.log(stage)\n        this.setState({stage})\n  \n      }.bind(this));\n  \n  })\n    .on('confirmation', (confirmationNumber, receipt) => {\n        console.log('on confirmation', confirmationNumber);\n    })\n    .on('error', error=> {\n      console.log('on error', error);\n  })\n  }\n\n  async seedReveal()  {\n\n      fetch(\"http://localhost:9000/testAPI/release\",{\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({address: this.state.addrescontract})//, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    }).then(function(response) {\n      \n      return response.text();//.json()\n    }).then(function(data) {\n      console.log(data)\n\n      this.state.Exchangedata.methods.stage.call().then(function(stage){\n       console.log(stage)\n       this.setState({stage})\n\n       }.bind(this));\n  }.bind(this))\n  }\n  \n  async conflict(){\n\n    this.state.Exchangedata.methods.conflict().send({from: this.state.account}).on('transactionHash', txHash => {\n      console.log('on transactionHash', txHash);\n  })\n  .on('receipt', receipt=> {\n  \n    console.log('on receipt', receipt);\n    console.log(receipt.events.refund.returnValues.correct)\n    this.state.Exchangedata.methods.stage.call().then(function(stage){\n      console.log(stage)\n      this.setState({stage})\n\n    }.bind(this));\n\n})\n  .on('confirmation', (confirmationNumber, receipt) => {\n      console.log('on confirmation', confirmationNumber);\n  })\n  .on('error', error=> {\n    console.log('on error', error);\n})\n}\n\n//     this.state.Exchangedata.methods.releaseSeed(10000).send({from: this.state.account}).on('transactionHash', txHash => {\n//       console.log('on transactionHash', txHash);\n//   })\n//   .on('receipt', receipt=> {\n    \n//     console.log('on receipt', receipt);\n\n//     this.state.Exchangedata.methods.stage.call().then(function(stage){\n//       console.log(stage)\n//       this.setState({stage})\n\n//     }.bind(this));\n\n// })\n//   .on('confirmation', (confirmationNumber, receipt) => {\n//       console.log('on confirmation', confirmationNumber);\n//   })\n//   .on('error', error=> {\n//     console.log('on error', error);\n// })\n  handleChangeaddress(event) {\n    this.setState({textboxaddress: event.target.value});\n  }\n\n\n  async Submitaddress(event) {\n    event.preventDefault();\n    this.addresscheck(this.state.textboxaddress)\n\n  }\n\n   refresh(event) {\n    event.preventDefault();\n    this.addresscheck(this.state.addrescontract)\n\n  }\n  async addresscheck(_address){\n\n    let exchangesCounter = await this.state.factory.methods.exchangesCounter().call()\n    this.setState({exchangesCounter});\n    let found = false;\n    for (var i = 1; i <= this.state.exchangesCounter; i++) {\n      let exchange = await this.state.factory.methods.exchangedatas(i).call()\n      if (exchange == _address)\n      {\n        found = true\n        this.setState({addrescontract: _address});\n        let Exchangedata= new this.state.web3.eth.Contract ( EXCHANGEDATA_ABI, _address)\n        this.setState({Exchangedata:Exchangedata})\n\n        let stage =  await this.state.Exchangedata.methods.stage.call()\n        let provider =  await this.state.Exchangedata.methods.provider.call()\n        let consumer =  await this.state.Exchangedata.methods.consumer.call()\n        console.log(\"provider\", provider)\n        this.setState({stage,provider,consumer})\n        console.log(\"address correct, may be better a pop up\")\n        break;\n      }\n    }\n    if (!found)\n      console.log(\"address is not a SC D:\")\n    \n      console.log(\"currentaddresscontract\", this.state.addrescontract)\n  }\n\n    \n  shownewexchange(){\n    return    <Form>\n    <Form.Group controlId=\"createnewcontract\">\n      <Form.Label>Create new SC for exchange data</Form.Label>\n      <Form.Control type=\"collateral\" placeholder=\"collateral\" value={this.state.valuenewexchange} onChange={this.handleChangeexchange}/>\n    </Form.Group>\n    <Button variant=\"primary\" type=\"button\" onClick={this.Createnewexchange}>\n      Create SC\n    </Button>\n  </Form>\n\n  }\n\n  render() {\n    return (\n        <div>\n          <button type=\"button\" onClick={this.Testdownload}>\n                     Pruebas\n          </button>\n          <button type=\"button\" onClick={this.CreateRandomIndex}>\n                     createindex\n          </button>\n\n          {this.state.addrescontract==''? this.shownewexchange(): <p>already have a SC address</p>}\n\n          <Form >\n          <Form.Group controlId=\"createnewcontract\" >\n              <Form.Label>Enter your address of your SC to continue the process</Form.Label>\n              <Form.Control type=\"Address\" placeholder=\"Address\" value={this.state.textboxvalue} onChange={this.handleChangeaddress} />\n\n              <Button variant=\"primary\" type=\"button\" onClick={this.Submitaddress}>\n                  Submit\n                </Button>\n\n            </Form.Group>\n                  \n          </Form>\n\n           <Button variant=\"primary\" type=\"button\" onClick={this.refresh}>\n                  Refresh\n            </Button>\n                  <div className=\"container-fluid\">\n            <div className=\"row\">\n              <main role=\"main\" className=\"col-lg-12 d-flex justify-content-center\">\n\n                {this.state.loading? this.showLoading() : this.loadExchanges()}\n\n              </main>\n            </div>\n          </div> \n\n\n        </div>\n      );\n  }\n}\n\nexport default Apprueba;\n"]},"metadata":{},"sourceType":"module"}