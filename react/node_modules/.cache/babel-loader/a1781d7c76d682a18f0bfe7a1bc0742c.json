{"ast":null,"code":"import _regeneratorRuntime from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jesus/Escritorio/tfg SC/react/src/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport { FACTORY_ADDRESS, FACTORY_ABI, TFG_ABI } from './config'; //var BigNumber = require('big-number');\n\nimport RegistreC from './Registre';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      accounts: [],\n      DataProviders: [],\n      exchangedatas: [],\n      DataCount: 0,\n      loading: true\n    };\n    _this.newRegister = _this.newRegister.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.DataProviders = _this.DataProviders.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.ContractCount = _this.ContractCount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"DataProviders2\",\n    value: function () {\n      var _DataProviders = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function DataProviders2() {\n        return _DataProviders.apply(this, arguments);\n      }\n\n      return DataProviders2;\n    }()\n  }, {\n    key: \"DataProviders\",\n    value: function () {\n      var _DataProviders2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function DataProviders() {\n        return _DataProviders2.apply(this, arguments);\n      }\n\n      return DataProviders;\n    }()\n  }, {\n    key: \"ContractCount\",\n    value: function () {\n      var _ContractCount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function ContractCount() {\n        return _ContractCount.apply(this, arguments);\n      }\n\n      return ContractCount;\n    }()\n  }, {\n    key: \"newRegister\",\n    value: function () {\n      var _newRegister = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(content) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function newRegister(_x) {\n        return _newRegister.apply(this, arguments);\n      }\n\n      return newRegister;\n    }()\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData();\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var web3, network, accounts, factory, price;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                web3 = new Web3(Web3.givenProvider); //podria ser el de infura : \"https://mainnet.infura.io/v3/7f5338a0ad3f4479927a4578bfaf0b35\"\n                // pero entonces no coge las accountsdel metamask\n\n                if (window.ethereum) {\n                  window.ethereum.enable();\n                }\n\n                _context5.next = 4;\n                return web3.eth.net.getNetworkType();\n\n              case 4:\n                network = _context5.sent;\n                _context5.next = 7;\n                return web3.eth.getAccounts();\n\n              case 7:\n                accounts = _context5.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                factory = new web3.eth.Contract(FACTORY_ABI, FACTORY_ADDRESS);\n                this.setState({\n                  factory: factory\n                });\n                _context5.next = 13;\n                return factory.methods.p().call();\n\n              case 13:\n                price = _context5.sent;\n                console.log(price); //falta implementar counter\n                // this.setState({exchangedatas: []});\n                // for (var i = 0; i <= exchangeCount; i++) {\n                //   const task = await factory.methods.exchangedatas(i).call()\n                //   console.log(\"taskbucle\", task)\n                //   this.setState({\n                //     exchangedatas: [...this.state.exchangedatas, task]\n                //   })\n                // }\n\n                _context5.next = 17;\n                return this.DataProviders();\n\n              case 17:\n                this.setState({\n                  loading: false\n                });\n\n              case 18:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"showLoading\",\n    value: function showLoading() {\n      return React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n  }, {\n    key: \"loadRegistre\",\n    value: function loadRegistre() {\n      return React.createElement(RegistreC, {\n        registros: this.state.registros,\n        newRegister: this.newRegister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"nav-link\",\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.state.loading ? this.showLoading() : this.loadRegistre()))), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.ContractCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"count\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.newRegister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"nuevoregistro\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/jesus/Escritorio/tfg SC/react/src/App.js"],"names":["React","Component","Web3","FACTORY_ADDRESS","FACTORY_ABI","TFG_ABI","RegistreC","App","props","state","accounts","DataProviders","exchangedatas","DataCount","loading","newRegister","bind","ContractCount","content","loadBlockchainData","web3","givenProvider","window","ethereum","enable","eth","net","getNetworkType","network","getAccounts","setState","account","factory","Contract","methods","p","call","price","console","log","registros","showLoading","loadRegistre"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport{FACTORY_ADDRESS, FACTORY_ABI, TFG_ABI} from './config'\n//var BigNumber = require('big-number');\nimport RegistreC from './Registre'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { \n      accounts: [],\n      DataProviders: [],\n      exchangedatas: [],\n      DataCount: 0,\n      loading: true\n       }\n    this.newRegister= this.newRegister.bind(this)\n    this.DataProviders = this.DataProviders.bind(this);\n    this.ContractCount = this.ContractCount.bind(this);\n  }\n  async DataProviders2() {\n\n    // let response = await fetch(\"http://localhost:9000/testAPI/accounts\")\n    // let accounts = await response.json();\n    // this.setState({ accounts: accounts });\n    // console.log(this.state.accounts);\n  }\n  async DataProviders() {\n    // let response = await fetch(\"http://localhost:9000/testAPI\")\n    // let registros = await response.json();\n    // console.log(\"registros:\",registros);\n    // this.setState({registros: []})\n    // registros.map((registro)=>{\n    //   this.setState({\n    //    registros: [...this.state.registros, registro[\"hash\"]]\n    //   })\n    // });\n  }\n  async ContractCount(){\n    // console.log(\"before call\", this.state.registreCount)\n    // let response = await fetch(\"http://localhost:9000/testAPI/count\")\n    // let count = await response.json();\n    // this.setState({ registreCount: count });\n    // console.log(\"after call\",this.state.registreCount)\n  }\n\n  async newRegister(content){//hacer post!!\n    // let response = await fetch(\"http://localhost:9000/testAPI/newregister\",{\n    //   method: 'POST',\n    //   headers: {\n    //     'Accept': 'application/json',\n    //     'Content-Type': 'application/json'TODO_LIST_ABI\n    //   },\n    //   body: JSON.stringify({hash: content})//, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    // });\n    // //let response2 = await response.json(); pendiente\n    // console.log(\"correcto^^\")\n    // this.DataProviders();\n  }\n  componentWillMount(){\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData(){\n    const web3= new Web3(Web3.givenProvider)//podria ser el de infura : \"https://mainnet.infura.io/v3/7f5338a0ad3f4479927a4578bfaf0b35\"\n   // pero entonces no coge las accountsdel metamask\n\n   if (window.ethereum) {\n        window.ethereum.enable()\n    }\n\n    const network = await web3.eth.net.getNetworkType()\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n    const factory= new web3.eth.Contract ( FACTORY_ABI,FACTORY_ADDRESS)\n    this.setState({factory})\n    const price  = await factory.methods.p().call()\n    console.log(price)\n\n    //falta implementar counter\n    // this.setState({exchangedatas: []});\n    // for (var i = 0; i <= exchangeCount; i++) {\n    //   const task = await factory.methods.exchangedatas(i).call()\n    //   console.log(\"taskbucle\", task)\n    //   this.setState({\n    //     exchangedatas: [...this.state.exchangedatas, task]\n    //   })\n    // }\n   await this.DataProviders() ;\n   this.setState({loading: false})\n \n  }\n\n\n  \n  showLoading(){\n    return  <div id=\"loader\" className=\"text-center\">\n    <p className=\"text-center\">Loading...</p>\n  </div>\n\n  }\n\n  loadRegistre(){\n     \n    return  <RegistreC registros={this.state.registros} newRegister= {this.newRegister}/>\n  }\n\n  render() {\n    return (\n        <div>\n          <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <ul className=\"navbar-nav px-3\">\n              <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                <small><a className=\"nav-link\" href=\"#\"><span id=\"account\"></span></a></small>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <main role=\"main\" className=\"col-lg-12 d-flex justify-content-center\">\n               \n                {this.state.loading? this.showLoading() : this.loadRegistre()}\n               \n              </main>\n            </div>\n          </div> \n          <button type=\"button\" onClick={this.ContractCount}>\n            count\n          </button>\n          <button type=\"button\" onClick={this.newRegister}>\n            nuevoregistro\n          </button>\n        </div>\n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}