{"ast":null,"code":"import _toConsumableArray from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jesus/Escritorio/tfg SC/react/src/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport { FACTORY_ADDRESS, FACTORY_ABI, TFG_ABI } from './config'; //var BigNumber = require('big-number');\n\nimport ExchangesC from './Exchanges';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '',\n      valuenewexchange: 0,\n      DataProviders: [],\n      exchangedatas: [],\n      exchangesCounter: 0,\n      loading: true\n    };\n    _this.newRegister = _this.newRegister.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.DataProviders = _this.DataProviders.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.CreateChildren = _this.CreateChildren.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeexchange = _this.handleChangeexchange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"DataProviders2\",\n    value: function () {\n      var _DataProviders = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function DataProviders2() {\n        return _DataProviders.apply(this, arguments);\n      }\n\n      return DataProviders2;\n    }()\n  }, {\n    key: \"DataProviders\",\n    value: function () {\n      var _DataProviders2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function DataProviders() {\n        return _DataProviders2.apply(this, arguments);\n      }\n\n      return DataProviders;\n    }()\n  }, {\n    key: \"CreateChildren\",\n    value: function () {\n      var _CreateChildren = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // console.log(\"before call\", this.state.ExchangesCount)\n                // let response = await fetch(\"http://localhost:9000/testAPI/count\")\n                // let count = await response.json();\n                // this.setState({ ExchangesCount: count });\n                // console.log(\"after call\",this.state.ExchangesCount)\n                console.log(this.state.account);\n                _context3.t0 = console;\n                _context3.next = 4;\n                return this.state.factory.methods.p().call();\n\n              case 4:\n                _context3.t1 = _context3.sent;\n\n                _context3.t0.log.call(_context3.t0, _context3.t1);\n\n                this.state.factory.methods.createChildContract(10000).send({\n                  from: this.state.account\n                }, function (error, transactionHash) {\n                  if (error) console.log(error);else {\n                    console.log(\"hashtransaction\", transactionHash);\n                  }\n                });\n                console.log(this.state.account);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function CreateChildren() {\n        return _CreateChildren.apply(this, arguments);\n      }\n\n      return CreateChildren;\n    }()\n  }, {\n    key: \"newRegister\",\n    value: function () {\n      var _newRegister = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(content) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function newRegister(_x) {\n        return _newRegister.apply(this, arguments);\n      }\n\n      return newRegister;\n    }()\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData();\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var web3, accounts, factory, TFG, exchangesCounter, i, exchange;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                web3 = new Web3(Web3.givenProvider); //podria ser el de infura : \"https://mainnet.infura.io/v3/7f5338a0ad3f4479927a4578bfaf0b35\"\n                // pero entonces no coge las accountsdel metamask\n\n                if (window.ethereum) {\n                  window.ethereum.enable();\n                }\n\n                _context5.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context5.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                console.log(FACTORY_ABI, FACTORY_ADDRESS);\n                factory = new web3.eth.Contract(FACTORY_ABI, FACTORY_ADDRESS);\n                this.setState({\n                  factory: factory\n                });\n                TFG = new web3.eth.Contract(TFG_ABI, '0xA6b9FA6336Bbe5280E9492aa1Da318a33ecB3Bd3');\n                _context5.next = 12;\n                return factory.methods.exchangesCounter().call();\n\n              case 12:\n                exchangesCounter = _context5.sent;\n                this.setState({\n                  exchangesCounter: exchangesCounter\n                });\n                _context5.t0 = console;\n                _context5.next = 17;\n                return factory.methods.provider().call();\n\n              case 17:\n                _context5.t1 = _context5.sent;\n\n                _context5.t0.log.call(_context5.t0, \"factory p\", _context5.t1);\n\n                _context5.t2 = console;\n                _context5.next = 22;\n                return TFG.methods.p().call();\n\n              case 22:\n                _context5.t3 = _context5.sent;\n\n                _context5.t2.log.call(_context5.t2, \"TFG p\", _context5.t3);\n\n                _context5.t4 = console;\n                _context5.next = 27;\n                return TFG.methods.n().call();\n\n              case 27:\n                _context5.t5 = _context5.sent;\n\n                _context5.t4.log.call(_context5.t4, \"TFG n\", _context5.t5);\n\n                _context5.t6 = console;\n                _context5.next = 32;\n                return factory.methods.collateral().call();\n\n              case 32:\n                _context5.t7 = _context5.sent;\n\n                _context5.t6.log.call(_context5.t6, \"factory collateral\", _context5.t7);\n\n                _context5.t8 = console;\n                _context5.next = 37;\n                return TFG.methods.collateral().call();\n\n              case 37:\n                _context5.t9 = _context5.sent;\n\n                _context5.t8.log.call(_context5.t8, \"TFG collateral\", _context5.t9);\n\n                _context5.t10 = console;\n                _context5.next = 42;\n                return factory.methods.provider().call();\n\n              case 42:\n                _context5.t11 = _context5.sent;\n\n                _context5.t10.log.call(_context5.t10, \"factory provider\", _context5.t11);\n\n                _context5.t12 = console;\n                _context5.next = 47;\n                return TFG.methods.provider().call();\n\n              case 47:\n                _context5.t13 = _context5.sent;\n\n                _context5.t12.log.call(_context5.t12, \"TFG provider\", _context5.t13);\n\n                this.setState({\n                  exchangedatas: []\n                });\n                i = 1;\n\n              case 51:\n                if (!(i <= exchangesCounter)) {\n                  _context5.next = 60;\n                  break;\n                }\n\n                _context5.next = 54;\n                return factory.methods.exchangedatas(i).call();\n\n              case 54:\n                exchange = _context5.sent;\n                console.log(\"exchange: \", i, exchange);\n                this.setState({\n                  exchangedatas: [].concat(_toConsumableArray(this.state.exchangedatas), [exchange])\n                });\n\n              case 57:\n                i++;\n                _context5.next = 51;\n                break;\n\n              case 60:\n                console.log(this.state.account);\n                _context5.next = 63;\n                return this.DataProviders();\n\n              case 63:\n                this.setState({\n                  loading: false\n                });\n\n              case 64:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"showLoading\",\n    value: function showLoading() {\n      return React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n  }, {\n    key: \"loadExchanges\",\n    value: function loadExchanges() {\n      return React.createElement(ExchangesC, {\n        exchangedatas: this.state.exchangedatas,\n        newRegister: this.newRegister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"handleChangeexchange\",\n    value: function handleChangeexchange(event) {\n      this.setState({\n        valuenewexchange: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"nav-link\",\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, this.state.loading ? this.showLoading() : this.loadExchanges()))), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.CreateChildren,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"CreateChildren\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.CreateChildren,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"CreateChildren\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/jesus/Escritorio/tfg SC/react/src/App.js"],"names":["React","Component","Web3","FACTORY_ADDRESS","FACTORY_ABI","TFG_ABI","ExchangesC","App","props","state","account","valuenewexchange","DataProviders","exchangedatas","exchangesCounter","loading","newRegister","bind","CreateChildren","handleChangeexchange","console","log","factory","methods","p","call","createChildContract","send","from","error","transactionHash","content","loadBlockchainData","web3","givenProvider","window","ethereum","enable","eth","getAccounts","accounts","setState","Contract","TFG","provider","n","collateral","i","exchange","event","target","value","showLoading","loadExchanges"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport{FACTORY_ADDRESS, FACTORY_ABI, TFG_ABI} from './config'\n//var BigNumber = require('big-number');\nimport ExchangesC from './Exchanges'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { \n      account: '',\n      valuenewexchange:0,\n      DataProviders: [],\n      exchangedatas: [],\n      exchangesCounter: 0,\n      loading: true\n       }\n    this.newRegister= this.newRegister.bind(this)\n    this.DataProviders = this.DataProviders.bind(this);\n    this.CreateChildren = this.CreateChildren.bind(this);\n    this.handleChangeexchange = this.handleChangeexchange.bind(this);\n  }\n  async DataProviders2() {\n\n    // let response = awa  //   this.state.todoList.methods.createTask(content).send({from: this.state.account}, (error, transactionHash) => {\n  //     console.log(\"hashtransaction\", transactionHash);\n  //     // this.state.todoList.methods.tasks(this.state.taskCount).call((error, result) => {\n  //     //   console.log(\"result\", result)\n  //     //   this.setState({\n  //     //     tasks: [...this.state.tasks, result],\n  //     //     loading:false,\n  //     //     taskCount: this.state.taskCount+1\n  //     //   })\n  //     // });\n  //     this.loadBlockchainData();  //muy guarro, debe haber otra manera fijo\n\n      \n  // });fetch(\"http://localhost:9000/testAPI/accounts\")\n    // let accounts = awa  //   this.state.todoList.methods.createTask(content).send({from: this.state.account}, (error, transactionHash) => {\n  //     console.log(\"hashtransaction\", transactionHash);\n  //     // this.state.todoList.methods.tasks(this.state.taskCount).call((error, result) => {\n  //     //   console.log(\"result\", result)\n  //     //   this.setState({\n  //     //     tasks: [...this.state.tasks, result],\n  //     //     loading:false,\n  //     //     taskCount: this.state.taskCount+1\n  //     //   })\n  //     // });\n  //     this.loadBlockchainData();  //muy guarro, debe haber otra manera fijo\n\n      \n  // });response.json();\n    // this.setState({ ac  //   this.state.todoList.methods.createTask(content).send({from: this.state.account}, (error, transactionHash) => {\n  //     console.log(\"hashtransaction\", transactionHash);\n  //     // this.state.todoList.methods.tasks(this.state.taskCount).call((error, result) => {\n  //     //   console.log(\"result\", result)\n  //     //   this.setState({\n  //     //     tasks: [...this.state.tasks, result],\n  //     //     loading:false,\n  //     //     taskCount: this.state.taskCount+1\n  //     //   })\n  //     // });\n  //     this.loadBlockchainData();  //muy guarro, debe haber otra manera fijo\n\n      \n  // });nts: accounts });\n    // console.log(this.s  //   this.state.todoList.methods.createTask(content).send({from: this.state.account}, (error, transactionHash) => {\n  //     console.log(\"hashtransaction\", transactionHash);\n  //     // this.state.todoList.methods.tasks(this.state.taskCount).call((error, result) => {\n  //     //   console.log(\"result\", result)\n  //     //   this.setState({\n  //     //     tasks: [...this.state.tasks, result],\n  //     //     loading:false,\n  //     //     taskCount: this.state.taskCount+1\n  //     //   })\n  //     // });\n  //     this.loadBlockchainData();  //muy guarro, debe haber otra manera fijo\n\n      \n  // });e.accounts);\n  }\n  async DataProviders() {  //   this.state.todoList.methods.createTask(content).send({from: this.state.account}, (error, transactionHash) => {\n  //     console.log(\"hashtransaction\", transactionHash);\n  //     // this.state.todoList.methods.tasks(this.state.taskCount).call((error, result) => {\n  //     //   console.log(\"result\", result)\n  //     //   this.setState({\n  //     //     tasks: [...this.state.tasks, result],\n  //     //     loading:false,\n  //     //     taskCount: this.state.taskCount+1\n  //     //   })\n  //     // });\n  //     this.loadBlockchainData();  //muy guarro, debe haber otra manera fijo\n\n      \n  // });\n    // let response = await fetch(\"http://localhost:9000/testAPI\")\n    // let registros = await response.json();\n    // console.log(\"registros:\",registros);\n    // this.setState({registros: []})\n    // registros.map((registro)=>{\n    //   this.setState({\n    //    registros: [...this.state.registros, registro[\"hash\"]]\n    //   })\n    // });\n  }\n  async CreateChildren(){\n    // console.log(\"before call\", this.state.ExchangesCount)\n    // let response = await fetch(\"http://localhost:9000/testAPI/count\")\n    // let count = await response.json();\n    // this.setState({ ExchangesCount: count });\n    // console.log(\"after call\",this.state.ExchangesCount)\n    console.log(this.state.account)\n    console.log(await this.state.factory.methods.p().call())\n    this.state.factory.methods.createChildContract(10000).send({from: this.state.account}, (error, transactionHash) => {\n      if (error)\n        console.log(error)\n      else{\n        console.log(\"hashtransaction\", transactionHash);    \n      }\n\n      });\n      console.log(this.state.account)\n  }\n\n  async newRegister(content){//hacer post!!\n    // let response = await fetch(\"http://localhost:9000/testAPI/newregister\",{\n    //   method: 'POST',\n    //   headers: {\n    //     'Accept': 'application/json',\n    //     'Content-Type': 'application/json'TODO_LIST_ABI\n    //   },\n    //   body: JSON.stringify({hash: content})//, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    // });\n    // //let response2 = await response.json(); pendiente\n    // console.log(\"correcto^^\")\n    // this.DataProviders();\n  }\n  componentWillMount(){\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData(){\n    const web3= new Web3(Web3.givenProvider)//podria ser el de infura : \"https://mainnet.infura.io/v3/7f5338a0ad3f4479927a4578bfaf0b35\"\n   // pero entonces no coge las accountsdel metamask\n\n   if (window.ethereum) {\n        window.ethereum.enable()\n    }\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n    console.log(FACTORY_ABI, FACTORY_ADDRESS)\n    const factory= new web3.eth.Contract ( FACTORY_ABI,FACTORY_ADDRESS)\n    this.setState({factory})\n    const TFG= new web3.eth.Contract ( TFG_ABI, '0xA6b9FA6336Bbe5280E9492aa1Da318a33ecB3Bd3')\n\n    const exchangesCounter = await factory.methods.exchangesCounter().call()\n    this.setState({exchangesCounter});\n\n    console.log(\"factory p\" , await factory.methods.provider().call())\n    console.log(\"TFG p\", await TFG.methods.p().call())\n    console.log(\"TFG n\", await TFG.methods.n().call())\n    console.log(\"factory collateral\" , await factory.methods.collateral().call())\n    console.log(\"TFG collateral\", await TFG.methods.collateral().call())\n    console.log(\"factory provider\" , await factory.methods.provider().call())\n     console.log(\"TFG provider\", await TFG.methods.provider().call())\n    \n    this.setState({exchangedatas: []});\n    for (var i = 1; i <= exchangesCounter; i++) {\n      const exchange = await factory.methods.exchangedatas(i).call()\n      console.log(\"exchange: \",i, exchange)\n      this.setState({\n        exchangedatas: [...this.state.exchangedatas, exchange]\n      })\n    }\n\n\n    console.log(this.state.account)\n\n\n   await this.DataProviders() ;\n   this.setState({loading: false})\n \n  }\n\n\n  \n  showLoading(){\n    return  <div id=\"loader\" className=\"text-center\">\n    <p className=\"text-center\">Loading...</p>\n  </div>\n\n  }\n\n  loadExchanges(){\n     \n    return  <ExchangesC exchangedatas={this.state.exchangedatas} newRegister= {this.newRegister}/>\n  }\n\n  handleChangeexchange(event) {\n    this.setState({valuenewexchange: event.target.value});\n  }\n\n  render() {\n    return (\n        <div>\n          <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <ul className=\"navbar-nav px-3\">\n              <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                <small><a className=\"nav-link\" href=\"#\"><span id=\"account\"></span></a></small>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <main role=\"main\" className=\"col-lg-12 d-flex justify-content-center\">\n               \n                {this.state.loading? this.showLoading() : this.loadExchanges()}\n               \n              </main>\n            </div>\n          </div> \n          <button type=\"button\" onClick={this.CreateChildren}>\n          CreateChildren\n          </button>\n\n          <form >\n \n                    <button type=\"button\" onClick={this.CreateChildren}>\n                     CreateChildren\n                    </button>\n          </form>\n\n\n        </div>\n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}