{"ast":null,"code":"import _classCallCheck from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jesus/Escritorio/tfg SC/react/src/Exchanges.js\";\nimport React, { Component } from 'react';\n\nvar FileSaver = require('file-saver');\n\nvar Exchanges =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Exchanges, _Component);\n\n  function Exchanges(props) {\n    var _this;\n\n    _classCallCheck(this, Exchanges);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Exchanges).call(this, props));\n    _this.state = {\n      //tasks: [] onmount creo\n      textboxvalue: '',\n      unselected: true,\n      address: ''\n    };\n    _this.handleChangemessage = _this.handleChangemessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.indexFile = React.createRef();\n    _this.FileCryptos = React.createRef();\n    _this.FilePIK = React.createRef();\n    _this.Comprobe = _this.Comprobe.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.Postindex = _this.Postindex.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Exchanges, [{\n    key: \"handleChangemessage\",\n    value: function handleChangemessage(event) {\n      this.setState({\n        textboxvalue: event.target.value\n      });\n    }\n  }, {\n    key: \"Postindex\",\n    value: function Postindex(event) {\n      event.preventDefault();\n      console.log(this.indexFile.current.files[0]);\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        // console.log(JSON.parse(event.target.result))\n        // console.log(JSON.stringify(JSON.parse(event.target.result)))\n        fetch(\"http://localhost:9000/testAPI/index\", {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(JSON.parse(event.target.result)) //, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n\n        }).then(function (response) {\n          return response.json(); //.json()\n        }).then(function (data) {\n          console.log(data);\n          var blob = new Blob([JSON.stringify(data)], {\n            type: \"text/plain;charset=utf-8\"\n          });\n          FileSaver.saveAs(blob, \"keysYproofs.txt\");\n        });\n      };\n\n      reader.readAsText(this.indexFile.current.files[0]);\n    }\n  }, {\n    key: \"readFile\",\n    value: function readFile(file) {\n      return new Promise(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.readAsText(file);\n\n        reader.onload = function (event) {\n          resolve(JSON.parse(event.target.result));\n        };\n      });\n    }\n  }, {\n    key: \"Comprobe\",\n    value: function Comprobe(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      console.log(this.FileCryptos.current.files[0]);\n      console.log(this.FilePIK.current.files[0]);\n      var promisesread = [this.readFile(this.FilePIK.current.files[0]), this.readFile(this.FileCryptos.current.files[0]), this.readFile(this.FilePIK.current.files[0])];\n      Promise.all(promisesread).then(function (results) {\n        console.log(results);\n\n        _this2.props.comprobe(results[0], results[1].keys, results[1].proofs);\n      });\n    }\n  }, {\n    key: \"loadExchanges\",\n    value: function loadExchanges() {\n      var _this3 = this;\n\n      //provider or consumercheck, display buttons en funcion de la estage con u switch\n      console.log(\"stage exchange\", this.props.stage);\n\n      switch (this.props.stage) {\n        //juntar case 0 i 1, caso 0 ( wait for MR des del server), case 1 (juntar case 0 i 1), case 2: wait for seed, case 3 : finish or trubleshooting\n        case 0:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(\"form\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            id: \"newTask\",\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.textboxvalue,\n            onChange: this.handleChangemessage,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this3.props.Startcomunication(_this3.state.textboxvalue);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, \"Startcomunication\")));\n\n        case 1:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(\"form\", {\n            onSubmit: this.Postindex,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, \"Upload file of index format: ej: 1,2,3,1,2,3\", React.createElement(\"input\", {\n            type: \"file\",\n            ref: this.indexFile,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          })), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, \"Submit\")), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, \"Comprobe all\"), React.createElement(\"form\", {\n            onSubmit: this.Comprobe,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, \"Upload file of cryptos\", React.createElement(\"input\", {\n            type: \"file\",\n            ref: this.FileCryptos,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          })), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"Upload file of proofs and keys\", React.createElement(\"input\", {\n            type: \"file\",\n            ref: this.FilePIK,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          })), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, \"Submit\")), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this3.props.confirm();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, \"confirm\"));\n          break;\n\n        case 2:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, \"Waiting for seed \", this.props.stage), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this3.props.seedReveal();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, \"reveal me the seed!\"));\n          break;\n\n        case 3:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this3.props.conflict();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, \"resolution/troubleshooting\"));\n          break;\n\n        default:\n          return React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          }, \"po esto es el defaul\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.props.addrescontract != '' ? this.loadExchanges() : this.props.addrescontract);\n    }\n  }]);\n\n  return Exchanges;\n}(Component);\n\nexport default Exchanges;","map":{"version":3,"sources":["/home/jesus/Escritorio/tfg SC/react/src/Exchanges.js"],"names":["React","Component","FileSaver","require","Exchanges","props","state","textboxvalue","unselected","address","handleChangemessage","bind","indexFile","createRef","FileCryptos","FilePIK","Comprobe","Postindex","event","setState","target","value","preventDefault","console","log","current","files","reader","FileReader","onload","fetch","method","headers","body","JSON","stringify","parse","result","then","response","json","data","blob","Blob","type","saveAs","readAsText","file","Promise","resolve","reject","promisesread","readFile","all","results","comprobe","keys","proofs","stage","addrescontract","Startcomunication","confirm","seedReveal","conflict","loadExchanges"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nvar FileSaver = require('file-saver');\n\nclass Exchanges extends Component {\n\n\n constructor(props) {\n       super(props)\n       this.state = {\n        //tasks: [] onmount creo\n         textboxvalue: '',\n         unselected: true,\n         address:''\n          }\n         this.handleChangemessage = this.handleChangemessage.bind(this);\n         this.indexFile = React.createRef();\n         this.FileCryptos = React.createRef();\n         this.FilePIK = React.createRef();\n\n         this.Comprobe = this.Comprobe.bind(this);\n         this.Postindex = this.Postindex.bind(this);\n  }\n  handleChangemessage(event) {\n    this.setState({textboxvalue: event.target.value});\n  }\n\n  Postindex(event) {\n    event.preventDefault();\n    console.log(this.indexFile.current.files[0])\n    var reader = new FileReader();\n    reader.onload = function(event) {\n      // console.log(JSON.parse(event.target.result))\n      // console.log(JSON.stringify(JSON.parse(event.target.result)))\n      fetch(\"http://localhost:9000/testAPI/index\",{\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(JSON.parse(event.target.result))//, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n      }).then(function(response) {\n    \n        return response.json();//.json()\n      }).then(function(data) {\n        console.log(data)\n        var blob = new Blob([JSON.stringify(data)], {type: \"text/plain;charset=utf-8\"});\n        FileSaver.saveAs(blob, \"keysYproofs.txt\"); \n      });\n    \n      \n    };\n  \n    reader.readAsText(this.indexFile.current.files[0]);\n  }\n  readFile(file){\n      return new Promise((resolve,reject) => {\n      var reader = new FileReader();\n      reader.readAsText(file);\n      reader.onload = function(event) {\n        resolve(JSON.parse(event.target.result))   \n      };\n    });\n\n  \n\n  }\n  Comprobe(event) {\n    event.preventDefault();\n\n    \n    console.log(this.FileCryptos.current.files[0])\n    console.log(this.FilePIK.current.files[0])\n    \n    let promisesread = [this.readFile(this.FilePIK.current.files[0]), this.readFile(this.FileCryptos.current.files[0]), this.readFile(this.FilePIK.current.files[0])]\n\n \n    Promise.all(promisesread).then((results) => {\n        console.log(results)\n        this.props.comprobe(results[0], results[1].keys, results[1].proofs)\n    });\n          \n  }\n\n  loadExchanges(){\n    //provider or consumercheck, display buttons en funcion de la estage con u switch\n    console.log(\"stage exchange\", this.props.stage)\n    switch (this.props.stage)\n    {\n\n      //juntar case 0 i 1, caso 0 ( wait for MR des del server), case 1 (juntar case 0 i 1), case 2: wait for seed, case 3 : finish or trubleshooting\n      case 0:\n      return  <div>\n      <p>current address selected: {this.props.addrescontract}</p>\n      <p>current stage selected: {this.props.stage}</p>\n      <form>\n            <input id=\"newTask\"  type=\"text\" className=\"form-control\" \n            value={this.state.textboxvalue} onChange={this. handleChangemessage}/>\n            <button type=\"button\" onClick={() => this.props.Startcomunication(this.state.textboxvalue)}>\n              Startcomunication\n              </button>\n      </form> \n      </div>\n      case 1:\n            return  <div>\n              <p>current address selected: {this.props.addrescontract}</p>\n              <p>current stage selected: {this.props.stage}</p>\n             \n              <form onSubmit={this.Postindex}>\n                  <label>\n                    Upload file of index format: ej: 1,2,3,1,2,3\n                    <input type=\"file\" ref={this.indexFile} />\n                  </label>\n                  <br />\n                  <button type=\"submit\">Submit</button>\n              </form>\n\n              <br />\n              <p>Comprobe all</p>\n              <form onSubmit={this.Comprobe}>\n                  <label>\n                    Upload file of cryptos\n                    <input type=\"file\" ref={this.FileCryptos} />\n                  </label>\n                  <label>\n                    Upload file of proofs and keys\n                    <input type=\"file\" ref={this.FilePIK} />\n                  </label>\n                  <br />\n                  <button type=\"submit\">Submit</button>\n              </form>\n\n\n\n                <button type=\"button\" onClick={() => this.props.confirm()}>\n              confirm\n              </button>\n\n              \n            </div>\n            break;\n      case 2:\n          return <div>\n              <p>current address selected: {this.props.addrescontract}</p>\n              <p>current stage selected: {this.props.stage}</p>\n              <p>Waiting for seed {this.props.stage}</p>\n              <button type=\"button\" onClick={() => this.props.seedReveal()}>\n              reveal me the seed!\n              </button>\n          </div>\n          break;\n    case 3:\n    return <div>\n        <p>current address selected: {this.props.addrescontract}</p>\n        <p>current stage selected: {this.props.stage}</p>\n      <button type=\"button\" onClick={() => this.props.conflict()}>\n      resolution/troubleshooting\n      </button>\n    </div>\n      break;\n    default:\n      return  <p>po esto es el defaul</p>\n    }\n  }textboxvalue\n  render() {\n    return (\n         <div id=\"content\">\n   \n\n              {(this.props.addrescontract!='')?this.loadExchanges():this.props.addrescontract}\n\n\n                </div>\n    \n      );\n  }\n}\n\nexport default Exchanges;\n"]},"metadata":{},"sourceType":"module"}