{"ast":null,"code":"import _regeneratorRuntime from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jesus/Escritorio/tfg SC/react/src/apprueba.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport { FACTORY_ADDRESS, FACTORY_ABI, TFG_ABI } from './config'; //var BigNumber = require('big-number');\n\nimport ExchangesC from './Exchanges';\n\nvar Apprueba =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Apprueba, _Component);\n\n  function Apprueba(props) {\n    var _this;\n\n    _classCallCheck(this, Apprueba);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Apprueba).call(this, props));\n    _this.state = {\n      account: '',\n      valuenewexchange: 0,\n      DataProviders: [],\n      exchangedata: '',\n      addrescontract: '',\n      exchangesCounter: 0,\n      loading: true\n    };\n    _this.newRegister = _this.newRegister.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.DataProviders = _this.DataProviders.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.CreateChildren = _this.CreateChildren.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeexchange = _this.handleChangeexchange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.SetMR = _this.SetMR.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.confirm = _this.confirm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.seedReveal = _this.seedReveal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeaddress = _this.handleChangeaddress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmitaddress = _this.handleSubmitaddress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Apprueba, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData();\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var web3, accounts, factory, exchangesCounter;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                web3 = new Web3(Web3.givenProvider); //podria ser el de infura : \"https://mainnet.infura.io/v3/7f5338a0ad3f4479927a4578bfaf0b35\"\n                // pero entonces no coge las accountsdel metamask\n\n                this.setState({\n                  web3: web3\n                });\n\n                if (window.ethereum) {\n                  window.ethereum.enable();\n                }\n\n                _context.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                factory = new web3.eth.Contract(FACTORY_ABI, FACTORY_ADDRESS);\n                this.setState({\n                  factory: factory\n                }); //let TFG= new web3.eth.Contract ( TFG_ABI, '0xA6b9FA6336Bbe5280E9492aa1Da318a33ecB3Bd3')\n\n                _context.next = 11;\n                return factory.methods.exchangesCounter().call();\n\n              case 11:\n                exchangesCounter = _context.sent;\n                this.setState({\n                  exchangesCounter: exchangesCounter\n                }); // this.setState({exchangedatas: []});\n                // for (var i = 1; i <= exchangesCounter; i++) {\n                //   const exchange = await factory.methods.exchangedatas(i).call()\n                //   console.log(\"exchange: \",i, exchange)\n                //   this.setState({\n                //     exchangedatas: [...this.state.exchangedatas, exchange]\n                //   })\n                // }\n\n                console.log(this.state.account);\n                this.setState({\n                  loading: false\n                });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"showLoading\",\n    value: function showLoading() {\n      return React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n  }, {\n    key: \"handleChangeexchange\",\n    value: function handleChangeexchange(event) {\n      this.setState({\n        valuenewexchange: event.target.value\n      });\n    }\n  }, {\n    key: \"loadExchanges\",\n    value: function loadExchanges() {\n      return React.createElement(ExchangesC, {\n        exchangedatas: this.state.exchangedatas,\n        newRegister: this.newRegister,\n        SetMR: this.SetMR,\n        confirm: this.confirm,\n        seedReveal: this.seedReveal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"CreateChildren\",\n    value: function () {\n      var _CreateChildren = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // console.log(\"before call\", this.state.ExchangesCount)\n                // let response = await fetch(\"http://localhost:9000/testAPI/count\")\n                // let count = await response.json();\n                // this.setState({ ExchangesCount: count });\n                // console.log(\"after call\",this.state.ExchangesCount)\n                console.log(this.state.account);\n                _context2.t0 = console;\n                _context2.next = 4;\n                return this.state.factory.methods.p().call();\n\n              case 4:\n                _context2.t1 = _context2.sent;\n\n                _context2.t0.log.call(_context2.t0, _context2.t1);\n\n                this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({\n                  from: this.state.account\n                }, function (error, transactionHash) {\n                  if (error) console.log(error);else {\n                    console.log(\"hashtransaction\", transactionHash);\n                  }\n                });\n                console.log(this.state.account);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function CreateChildren() {\n        return _CreateChildren.apply(this, arguments);\n      }\n\n      return CreateChildren;\n    }()\n  }, {\n    key: \"SetMR\",\n    value: function () {\n      var _SetMR = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(address) {\n        var TFG;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                TFG = new this.state.web3.eth.Contract(TFG_ABI, address);\n                TFG.methods.SetMR(100, 1000).send({\n                  from: this.state.account\n                }, function (error, transactionHash) {\n                  if (error) console.log(error);else {\n                    console.log(\"hashtransaction\", transactionHash);\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function SetMR(_x) {\n        return _SetMR.apply(this, arguments);\n      }\n\n      return SetMR;\n    }()\n  }, {\n    key: \"confirm\",\n    value: function () {\n      var _confirm = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(address) {\n        var TFG;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                TFG = new this.state.web3.eth.Contract(TFG_ABI, address);\n                TFG.methods.confirm().send({\n                  from: this.state.account\n                }, function (error, transactionHash) {\n                  if (error) console.log(error);else {\n                    console.log(\"hashtransaction\", transactionHash);\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function confirm(_x2) {\n        return _confirm.apply(this, arguments);\n      }\n\n      return confirm;\n    }()\n  }, {\n    key: \"seedReveal\",\n    value: function () {\n      var _seedReveal = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(address) {\n        var TFG;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                console.log(\"address seedreveal\", address);\n                TFG = new this.state.web3.eth.Contract(TFG_ABI, address);\n                TFG.methods.releaseSeed(10000).send({\n                  from: this.state.account\n                }, function (error, transactionHash) {\n                  if (error) console.log(error);else {\n                    console.log(\"hashtransaction\", transactionHash);\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function seedReveal(_x3) {\n        return _seedReveal.apply(this, arguments);\n      }\n\n      return seedReveal;\n    }()\n  }, {\n    key: \"handleChangeaddress\",\n    value: function handleChangeaddress(event) {\n      this.setState({\n        textboxvalue: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmitaddress\",\n    value: function handleSubmitaddress(event) {\n      event.preventDefault();\n      this.props.newRegister(this.state.textboxvalue);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"nav-link\",\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, this.state.loading ? this.showLoading() : this.loadExchanges()))), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"mewexchange\",\n        type: \"number\",\n        step: \"1\",\n        className: \"form-control\",\n        value: this.state.valuenewexchange,\n        onChange: this.handleChangeexchange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.CreateChildren,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"CreateChildren\")), React.createElement(\"form\", {\n        onSubmit: this.handleSubmitaddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"newTask\",\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.textboxvalue,\n        onChange: this.handleChangeaddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Apprueba;\n}(Component);\n\nexport default Apprueba;","map":{"version":3,"sources":["/home/jesus/Escritorio/tfg SC/react/src/apprueba.js"],"names":["React","Component","Web3","FACTORY_ADDRESS","FACTORY_ABI","TFG_ABI","ExchangesC","Apprueba","props","state","account","valuenewexchange","DataProviders","exchangedata","addrescontract","exchangesCounter","loading","newRegister","bind","CreateChildren","handleChangeexchange","SetMR","confirm","seedReveal","handleChangeaddress","handleSubmitaddress","loadBlockchainData","web3","givenProvider","setState","window","ethereum","enable","eth","getAccounts","accounts","factory","Contract","methods","call","console","log","event","target","value","exchangedatas","p","createChildContract","send","from","error","transactionHash","address","TFG","releaseSeed","textboxvalue","preventDefault","showLoading","loadExchanges"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport{FACTORY_ADDRESS, FACTORY_ABI, TFG_ABI} from './config'\n//var BigNumber = require('big-number');\nimport ExchangesC from './Exchanges'\n\nclass Apprueba extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { \n      account: '',\n      valuenewexchange:0,\n      DataProviders: [],\n      exchangedata: '',\n      addrescontract: '',\n      exchangesCounter: 0,\n      loading: true\n       }\n    this.newRegister= this.newRegister.bind(this)\n    this.DataProviders = this.DataProviders.bind(this);\n    this.CreateChildren = this.CreateChildren.bind(this);\n    this.handleChangeexchange = this.handleChangeexchange.bind(this);\n    this.SetMR = this.SetMR.bind(this);\n    this.confirm = this.confirm.bind(this);\n    this.seedReveal = this.seedReveal.bind(this);\n    this.handleChangeaddress = this.handleChangeaddress.bind(this);\n    this.handleSubmitaddress = this.handleSubmitaddress.bind(this);\n  }\n  \n  componentWillMount(){\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData(){\n    const web3= new Web3(Web3.givenProvider)//podria ser el de infura : \"https://mainnet.infura.io/v3/7f5338a0ad3f4479927a4578bfaf0b35\"\n   // pero entonces no coge las accountsdel metamask\n   this.setState({web3})\n   if (window.ethereum) {\n        window.ethereum.enable()\n    }\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n\n\n    const factory= new web3.eth.Contract ( FACTORY_ABI,FACTORY_ADDRESS)\n    this.setState({factory})\n\n    \n\n    //let TFG= new web3.eth.Contract ( TFG_ABI, '0xA6b9FA6336Bbe5280E9492aa1Da318a33ecB3Bd3')\n\n\n    const exchangesCounter = await factory.methods.exchangesCounter().call()\n\n    this.setState({exchangesCounter});\n\n\n    // this.setState({exchangedatas: []});\n    // for (var i = 1; i <= exchangesCounter; i++) {\n    //   const exchange = await factory.methods.exchangedatas(i).call()\n    //   console.log(\"exchange: \",i, exchange)\n    //   this.setState({\n    //     exchangedatas: [...this.state.exchangedatas, exchange]\n    //   })\n    // }\n\n\n    console.log(this.state.account)\n\n\n   this.setState({loading: false})\n \n  }\n\n\n  \n  showLoading(){\n    return  <div id=\"loader\" className=\"text-center\">\n    <p className=\"text-center\">Loading...</p>\n  </div>\n\n  }\n\n\n  handleChangeexchange(event) {\n    this.setState({valuenewexchange: event.target.value});\n  }\n\n  loadExchanges(){\n     \n    return  <ExchangesC exchangedatas={this.state.exchangedatas} newRegister= {this.newRegister}\n     SetMR= {this.SetMR} confirm= {this.confirm} seedReveal= {this.seedReveal}/>\n  }\n\n  \n\n  \n  async CreateChildren(){\n    // console.log(\"before call\", this.state.ExchangesCount)\n    // let response = await fetch(\"http://localhost:9000/testAPI/count\")\n    // let count = await response.json();\n    // this.setState({ ExchangesCount: count });\n    // console.log(\"after call\",this.state.ExchangesCount)\n    \n    console.log(this.state.account)\n    console.log(await this.state.factory.methods.p().call())\n    this.state.factory.methods.createChildContract(this.state.valuenewexchange).send({from: this.state.account}, (error, transactionHash) => {\n      if (error)\n        console.log(error)\n      else{\n        console.log(\"hashtransaction\", transactionHash);    \n      }\n\n      });\n      console.log(this.state.account)\n  }\n\n  async SetMR(address){\n\n    let TFG= new this.state.web3.eth.Contract ( TFG_ABI, address)\n    TFG.methods.SetMR(100,1000).send({from: this.state.account}, (error, transactionHash) => {\n      if (error)\n        console.log(error)\n      else{\n        console.log(\"hashtransaction\", transactionHash);    \n      }\n\n      });\n  }\n  async confirm(address){\n\n    let TFG= new this.state.web3.eth.Contract ( TFG_ABI, address)\n    TFG.methods.confirm().send({from: this.state.account}, (error, transactionHash) => {\n      if (error)\n        console.log(error)\n      else{\n        console.log(\"hashtransaction\", transactionHash);    \n      }\n\n      });\n  }\n  async seedReveal(address){\n\n    console.log(\"address seedreveal\", address)\n    let TFG= new this.state.web3.eth.Contract ( TFG_ABI, address)\n    TFG.methods.releaseSeed(10000).send({from: this.state.account}, (error, transactionHash) => {\n      if (error)\n        console.log(error)\n      else{\n        console.log(\"hashtransaction\", transactionHash);    \n      }\n\n      });\n  }\n  handleChangeaddress(event) {\n    this.setState({textboxvalue: event.target.value});\n  }\n\n  handleSubmitaddress(event) {\n    event.preventDefault();\n    this.props.newRegister(this.state.textboxvalue)\n   \n  }\n\n  render() {\n    return (\n        <div>\n          <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <ul className=\"navbar-nav px-3\">\n              <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                <small><a className=\"nav-link\" href=\"#\"><span id=\"account\"></span></a></small>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <main role=\"main\" className=\"col-lg-12 d-flex justify-content-center\">\n\n                {this.state.loading? this.showLoading() : this.loadExchanges()}\n\n              </main>\n            </div>\n          </div> \n          <form >\n                    <input id=\"mewexchange\"  type=\"number\" step=\"1\" className=\"form-control\" \n                    value={this.state.valuenewexchange} onChange={this.handleChangeexchange}/>\n                    <button type=\"button\" onClick={this.CreateChildren}>\n                     CreateChildren\n                    </button>\n          </form>\n          <form onSubmit={this.handleSubmitaddress}>\n                    <input id=\"newTask\"  type=\"text\" className=\"form-control\" \n                    value={this.state.textboxvalue} onChange={this.handleChangeaddress}/>\n                    <input type=\"submit\" hidden={true} />\n                  </form>\n        </div>\n      );\n  }\n}\n\nexport default Apprueba;\n"]},"metadata":{},"sourceType":"module"}