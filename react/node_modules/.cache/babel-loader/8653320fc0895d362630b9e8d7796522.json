{"ast":null,"code":"import _classCallCheck from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jesus/Escritorio/tfg SC/react/src/Exchanges.js\";\nimport React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nvar FileSaver = require('file-saver');\n\nvar Exchanges =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Exchanges, _Component);\n\n  function Exchanges(props) {\n    var _this;\n\n    _classCallCheck(this, Exchanges);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Exchanges).call(this, props));\n    _this.state = {\n      //tasks: [] onmount creo\n      textboxvalue: '',\n      unselected: true,\n      address: ''\n    };\n    _this.indexFile = React.createRef();\n    _this.FileCryptos = React.createRef();\n    _this.FilePIK = React.createRef();\n    _this.Decrypt = _this.Decrypt.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.Comprobe = _this.Comprobe.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.Postindex = _this.Postindex.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Exchanges, [{\n    key: \"Postindex\",\n    value: function Postindex(event) {\n      event.preventDefault();\n      console.log(this.indexFile.current.files[0]);\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        // console.log(JSON.parse(event.target.result))\n        // console.log(JSON.stringify(JSON.parse(event.target.result)))\n        fetch(\"http://localhost:9000/testAPI/index\", {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(JSON.parse(event.target.result)) //, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n\n        }).then(function (response) {\n          return response.json(); //.json()\n        }).then(function (data) {\n          console.log(data);\n          var blob = new Blob([JSON.stringify(data)], {\n            type: \"text/plain;charset=utf-8\"\n          });\n          FileSaver.saveAs(blob, \"keysYproofs.txt\");\n        });\n      };\n\n      reader.readAsText(this.indexFile.current.files[0]);\n    }\n  }, {\n    key: \"readFile\",\n    value: function readFile(file) {\n      return new Promise(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.readAsText(file);\n\n        reader.onload = function (event) {\n          resolve(JSON.parse(event.target.result));\n        };\n      });\n    }\n  }, {\n    key: \"Comprobe\",\n    value: function Comprobe(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      console.log(this.FileCryptos.current.files[0]);\n      console.log(this.FilePIK.current.files[0]);\n      var promisesread = [this.readFile(this.FileCryptos.current.files[0]), this.readFile(this.FilePIK.current.files[0]), this.readFile(this.indexFile.current.files[0])];\n      Promise.all(promisesread).then(function (results) {\n        console.log(results);\n\n        _this2.props.comprobe(results[0].cryptoleafs, results[1].keys, results[1].proofs, results[2].index);\n      });\n    }\n  }, {\n    key: \"Decrypt\",\n    value: function Decrypt(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      this.readFile(this.FileCryptos.current.files[0]).then(function (result) {\n        _this3.props.decrypt(result.cryptoleafs);\n      });\n    }\n  }, {\n    key: \"loadExchanges\",\n    value: function loadExchanges() {\n      var _this4 = this;\n\n      //provider or consumercheck, display buttons en funcion de la estage con u switch\n      console.log(\"stage exchange\", this.props.stage);\n\n      switch (this.props.stage) {\n        //juntar case 0 i 1, caso 0 ( wait for MR des del server), case 1 (juntar case 0 i 1), case 2: wait for seed, case 3 : finish or trubleshooting\n        case 0:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(\"form\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this4.props.Startcomunication();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, \"Startcomunication\")));\n\n        case 1:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(Form, {\n            onSubmit: this.Postindex,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, React.createElement(Form.Group, {\n            controlId: \"createnewcontract\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, \"Upload Index in order to get the data samples\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }), \"File of index format: ej: 1,2,3,1,2,3\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }), \"if you want we create a random indexes for you ^^\", React.createElement(Button, {\n            type: \"button\",\n            onClick: this.CreateRandomIndex,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, \"CreateRandomIndex\"), React.createElement(\"input\", {\n            type: \"file\",\n            ref: this.indexFile,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          })), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }), React.createElement(Button, {\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, \"Submit\"))), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, \"Comprobe Merkle Proofs of keys and cryptos\"), React.createElement(\"form\", {\n            onSubmit: this.Comprobe,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, \"Upload file of cryptos\", React.createElement(\"input\", {\n            type: \"file\",\n            ref: this.FileCryptos,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          })), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, \"Upload file of proofs and keys\", React.createElement(\"input\", {\n            type: \"file\",\n            ref: this.FilePIK,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          })), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }), React.createElement(Button, {\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, \"Submit\")), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this4.props.confirm();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, \"confirm\"));\n          break;\n\n        case 2:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, \"Waiting for seed \", this.props.stage), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this4.props.seedReveal();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, \"reveal me the seed!\"));\n          break;\n\n        case 3:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          }, \"Decrypt all data\"), React.createElement(\"form\", {\n            onSubmit: this.Decrypt,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, \"Upload file of cryptos\", React.createElement(\"input\", {\n            type: \"file\",\n            ref: this.FileCryptos,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          })), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, \"Submit\")), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this4.props.conflict();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          }, \"resolution/troubleshooting\"));\n          break;\n\n        default:\n          return React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, \"po esto es el defaul\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, this.props.addrescontract != '' ? this.loadExchanges() : this.props.addrescontract);\n    }\n  }]);\n\n  return Exchanges;\n}(Component);\n\nexport default Exchanges;","map":{"version":3,"sources":["/home/jesus/Escritorio/tfg SC/react/src/Exchanges.js"],"names":["React","Component","Form","Button","FileSaver","require","Exchanges","props","state","textboxvalue","unselected","address","indexFile","createRef","FileCryptos","FilePIK","Decrypt","bind","Comprobe","Postindex","event","preventDefault","console","log","current","files","reader","FileReader","onload","fetch","method","headers","body","JSON","stringify","parse","target","result","then","response","json","data","blob","Blob","type","saveAs","readAsText","file","Promise","resolve","reject","promisesread","readFile","all","results","comprobe","cryptoleafs","keys","proofs","index","decrypt","stage","addrescontract","Startcomunication","CreateRandomIndex","confirm","seedReveal","conflict","loadExchanges"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form,Button } from 'react-bootstrap';\nvar FileSaver = require('file-saver');\n\nclass Exchanges extends Component {\n\n\n constructor(props) {\n       super(props)\n       this.state = {\n        //tasks: [] onmount creo\n         textboxvalue: '',\n         unselected: true,\n         address:''\n          }\n         this.indexFile = React.createRef();\n         this.FileCryptos = React.createRef();\n         this.FilePIK = React.createRef();\n\n         this.Decrypt = this.Decrypt.bind(this);\n         this.Comprobe = this.Comprobe.bind(this);\n         this.Postindex = this.Postindex.bind(this);\n  }\n\n\n  Postindex(event) {\n    event.preventDefault();\n    console.log(this.indexFile.current.files[0])\n    var reader = new FileReader();\n    reader.onload = function(event) {\n      // console.log(JSON.parse(event.target.result))\n      // console.log(JSON.stringify(JSON.parse(event.target.result)))\n      fetch(\"http://localhost:9000/testAPI/index\",{\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(JSON.parse(event.target.result))//, {a:1, b:2}... // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n      }).then(function(response) {\n    \n        return response.json();//.json()\n      }).then(function(data) {\n        console.log(data)\n        var blob = new Blob([JSON.stringify(data)], {type: \"text/plain;charset=utf-8\"});\n        FileSaver.saveAs(blob, \"keysYproofs.txt\"); \n      });\n    \n      \n    };\n  \n    reader.readAsText(this.indexFile.current.files[0]);\n  }\n  readFile(file){\n      return new Promise((resolve,reject) => {\n      var reader = new FileReader();\n      reader.readAsText(file);\n      reader.onload = function(event) {\n        resolve(JSON.parse(event.target.result))   \n      };\n    });\n\n  \n\n  }\n  Comprobe(event) {\n    event.preventDefault();\n\n    \n    console.log(this.FileCryptos.current.files[0])\n    console.log(this.FilePIK.current.files[0])\n    \n    let promisesread = [this.readFile(this.FileCryptos.current.files[0]), this.readFile(this.FilePIK.current.files[0]), this.readFile(this.indexFile.current.files[0])]\n\n \n    Promise.all(promisesread).then((results) => {\n        console.log(results)\n        this.props.comprobe(results[0].cryptoleafs, results[1].keys, results[1].proofs, results[2].index)\n    });\n          \n  }\n\n  Decrypt(event) {\n    event.preventDefault();\n\n    this.readFile(this.FileCryptos.current.files[0]).then(result => {\n      this.props.decrypt(result.cryptoleafs)\n    })\n    \n  }\n\n  loadExchanges(){\n    //provider or consumercheck, display buttons en funcion de la estage con u switch\n    console.log(\"stage exchange\", this.props.stage)\n    switch (this.props.stage)\n    {\n\n      //juntar case 0 i 1, caso 0 ( wait for MR des del server), case 1 (juntar case 0 i 1), case 2: wait for seed, case 3 : finish or trubleshooting\n      case 0:\n      return  <div>\n      <p>current address selected: {this.props.addrescontract}</p>\n      <p>current stage selected: {this.props.stage}</p>\n      <form>\n            <button type=\"button\" onClick={() => this.props.Startcomunication()}>\n              Startcomunication\n              </button>\n      </form> \n      </div>\n      case 1:\n            return  <div>\n              <p>current address selected: {this.props.addrescontract}</p>\n              <p>current stage selected: {this.props.stage}</p>\n             \n              <Form onSubmit={this.Postindex}>\n              <Form.Group controlId=\"createnewcontract\" >\n                  <label>\n                    Upload Index in order to get the data samples \n                    <br />\n                    File of index format: ej: 1,2,3,1,2,3 \n                    <br />\n                    if you want we create a random indexes for you ^^\n                    <Button type=\"button\" onClick={this.CreateRandomIndex}>\n                     CreateRandomIndex\n                    </Button>\n                    <input type=\"file\" ref={this.indexFile} />\n                  </label>\n                  <br />\n                  <Button type=\"submit\">Submit</Button>\n                  </Form.Group>\n              </Form>\n\n              <br />\n              <p>Comprobe Merkle Proofs of keys and cryptos</p>\n              <form onSubmit={this.Comprobe}>\n                  <label>\n                    Upload file of cryptos\n                    <input type=\"file\" ref={this.FileCryptos} />\n                  </label>\n                  <label>\n                    Upload file of proofs and keys\n                    <input type=\"file\" ref={this.FilePIK} />\n                  </label>\n                  <br />\n                  <Button type=\"submit\">Submit</Button>\n              </form>\n\n\n\n                <button type=\"button\" onClick={() => this.props.confirm()}>\n              confirm\n              </button>\n\n              \n            </div>\n            break;\n      case 2:\n          return <div>\n              <p>current address selected: {this.props.addrescontract}</p>\n              <p>current stage selected: {this.props.stage}</p>\n              <p>Waiting for seed {this.props.stage}</p>\n              <button type=\"button\" onClick={() => this.props.seedReveal()}>\n              reveal me the seed!\n              </button>\n          </div>\n          break;\n    case 3:\n    return <div>\n        <p>current address selected: {this.props.addrescontract}</p>\n        <p>current stage selected: {this.props.stage}</p>\n\n        <br />\n              <p>Decrypt all data</p>\n              <form onSubmit={this.Decrypt}>\n                  <label>\n                    Upload file of cryptos\n                    <input type=\"file\" ref={this.FileCryptos} />\n                  </label>\n                  <br />\n                  <button type=\"submit\">Submit</button>\n              </form>\n\n          <br />  \n      <button type=\"button\" onClick={() => this.props.conflict()}>\n      resolution/troubleshooting\n      </button>\n\n    </div>\n      break;\n    default:\n      return  <p>po esto es el defaul</p>\n    }\n  }textboxvalue\n  render() {\n    return (\n         <div id=\"content\">\n   \n\n              {(this.props.addrescontract!='')?this.loadExchanges():this.props.addrescontract}\n\n\n                </div>\n    \n      );\n  }\n}\n\nexport default Exchanges;\n"]},"metadata":{},"sourceType":"module"}