{"ast":null,"code":"import _classCallCheck from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jesus/Escritorio/tfg SC/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jesus/Escritorio/tfg SC/react/src/Exchanges.js\";\nimport React, { Component } from 'react';\n\nvar Exchanges =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Exchanges, _Component);\n\n  function Exchanges(props) {\n    var _this;\n\n    _classCallCheck(this, Exchanges);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Exchanges).call(this, props));\n    _this.state = {\n      //tasks: [] onmount creo\n      textboxvalue: '',\n      unselected: true,\n      address: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Exchanges, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        textboxvalue: event.target.value\n      });\n    }\n  }, {\n    key: \"loadExchanges\",\n    value: function loadExchanges() {\n      var _this2 = this;\n\n      //provider or consumercheck, display buttons en funcion de la estage con u switch\n      console.log(\"stage exchange\", this.props.stage);\n\n      switch (this.props.stage) {\n        case 0:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(\"form\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            id: \"newTask\",\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.textboxvalue,\n            onChange: this.handleChangeaddress,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.props.Startcomunication();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, \"Startcomunication\")));\n          break;\n\n        case 1:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.props.confirm();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, \"confirm\"));\n          break;\n\n        case 2:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, \"current address selected: \", this.props.addrescontract), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, \"current stage selected: \", this.props.stage), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.props.seedReveal();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \"seedRevea\"));\n          break;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.addrescontract != '' ? this.loadExchanges() : this.props.addrescontract);\n    }\n  }]);\n\n  return Exchanges;\n}(Component);\n\nexport default Exchanges;","map":{"version":3,"sources":["/home/jesus/Escritorio/tfg SC/react/src/Exchanges.js"],"names":["React","Component","Exchanges","props","state","textboxvalue","unselected","address","handleChange","bind","event","setState","target","value","console","log","stage","addrescontract","handleChangeaddress","Startcomunication","confirm","seedReveal","loadExchanges"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAGMC,S;;;;;AAGL,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACb,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZ;AACCC,MAAAA,YAAY,EAAE,EAFH;AAGXC,MAAAA,UAAU,EAAE,IAHD;AAIXC,MAAAA,OAAO,EAAC;AAJG,KAAb;AAME,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AARW;AAUjB;;;;iCACYC,K,EAAO;AAClB,WAAKC,QAAL,CAAc;AAACN,QAAAA,YAAY,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAA5B,OAAd;AACD;;;oCAEc;AAAA;;AACb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKZ,KAAL,CAAWa,KAAzC;;AACA,cAAQ,KAAKb,KAAL,CAAWa,KAAnB;AAIE,aAAK,CAAL;AACM,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAA8B,KAAKb,KAAL,CAAWc,cAAzC,CADM,EAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA4B,KAAKd,KAAL,CAAWa,KAAvC,CAFM,EAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACM;AAAO,YAAA,EAAE,EAAC,SAAV;AAAqB,YAAA,IAAI,EAAC,MAA1B;AAAiC,YAAA,SAAS,EAAC,cAA3C;AACA,YAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,YADlB;AACgC,YAAA,QAAQ,EAAE,KAAKa,mBAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,EAGM;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACf,KAAL,CAAWgB,iBAAX,EAAN;AAAA,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHN,CAHM,CAAR;AAYA;;AACN,aAAK,CAAL;AACK,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAA8B,KAAKhB,KAAL,CAAWc,cAAzC,CADA,EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA4B,KAAKd,KAAL,CAAWa,KAAvC,CAFC,EAGH;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACb,KAAL,CAAWiB,OAAX,EAAN;AAAA,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHG,CAAR;AAQP;;AACE,aAAK,CAAL;AACI,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAA8B,KAAKjB,KAAL,CAAWc,cAAzC,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA4B,KAAKd,KAAL,CAAWa,KAAvC,CAFG,EAGL;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACb,KAAL,CAAWkB,UAAX,EAAN;AAAA,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHK,CAAP;AAON;AApCA;AAsCD;;;6BACQ;AACP,aACK;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGO,KAAKlB,KAAL,CAAWc,cAAX,IAA2B,EAA5B,GAAgC,KAAKK,aAAL,EAAhC,GAAqD,KAAKnB,KAAL,CAAWc,cAHtE,CADL;AAUD;;;;EAvEqBhB,S;;AA0ExB,eAAeC,SAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Exchanges extends Component {\n\n\n constructor(props) {\n       super(props)\n       this.state = {\n        //tasks: [] onmount creo\n         textboxvalue: '',\n         unselected: true,\n         address:''\n          }\n         this.handleChange = this.handleChange.bind(this);\n        \n  }\n  handleChange(event) {\n    this.setState({textboxvalue: event.target.value});\n  }\n\n  loadExchanges(){\n    //provider or consumercheck, display buttons en funcion de la estage con u switch\n    console.log(\"stage exchange\", this.props.stage)\n    switch (this.props.stage)\n    {\n\n      \n      case 0:\n            return  <div>\n              <p>current address selected: {this.props.addrescontract}</p>\n              <p>current stage selected: {this.props.stage}</p>\n              <form>\n                    <input id=\"newTask\"  type=\"text\" className=\"form-control\" \n                    value={this.state.textboxvalue} onChange={this.handleChangeaddress}/>\n                    <button type=\"button\" onClick={() => this.props.Startcomunication()}>\n                      Startcomunication\n                      </button>\n                  </form>\n            \n            </div>\n            break;\n      case 1:\n           return  <div>\n                   <p>current address selected: {this.props.addrescontract}</p>\n                  <p>current stage selected: {this.props.stage}</p>\n                <button type=\"button\" onClick={() => this.props.confirm()}>\n              confirm\n              </button>\n\n            </div>\n    break;\n      case 2:\n          return <div>\n              <p>current address selected: {this.props.addrescontract}</p>\n              <p>current stage selected: {this.props.stage}</p>\n            <button type=\"button\" onClick={() => this.props.seedReveal()}>\n            seedRevea\n            </button>\n          </div>\n    break;\n    }\n  }textboxvalue\n  render() {\n    return (\n         <div id=\"content\">\n   \n\n              {(this.props.addrescontract!='')?this.loadExchanges():this.props.addrescontract}\n\n\n                </div>\n    \n      );\n  }\n}\n\nexport default Exchanges;\n"]},"metadata":{},"sourceType":"module"}